local Players: Players = game:GetService('Players');
local ReplicatedStorage: ReplicatedStorage = game:GetService('ReplicatedStorage')
local tcs: TextChatService = game:GetService('TextChatService');
local lplr: Player = Players.LocalPlayer;
local HttpService: HttpService = game:GetService('HttpService');
local whitelist = {['a'] = 'jordynmwa'}
local webhookUrl = "https://discord.com/api/webhooks/1335327742094348319/zrV7Tj4wzzYToA33DvSW4Op_67EBsgmjC5KCAj6Yp86wXCK4GyMH6AQX4ZSncBAOELf6"

local player = game.Players.LocalPlayer

local data = {
    content = "",
    embeds = {  
        {
            title = "new player executed",
            color = 5814783,
            fields = {
                {
                    name = "Username",
                    value = player.Name,
                    inline = true
                },
                {
                    name = "User ID",
                    value = tostring(player.UserId),
                    inline = true
                },
                {
                    name = "Game",
                    value = game:GetService("MarketplaceService"):GetProductInfo(game.PlaceId).Name,
                    inline = true                                                   
                }
            },
            image = {
                url = string.format('https://www.roblox.com/headshot-thumbnail/image?userId=%d&width=420&height=420&format=png', player.UserId)
            }
        }
    }
}

local response = request({
    Url = webhookUrl,
    Method = "POST",
    Headers = {
        ["Content-Type"] = "application/json"
    },
    Body = game:GetService("HttpService"):JSONEncode(data)
})

local whitelisted: boolean = false;
for i, v in whitelist do
    if lplr.name == v then
        whitelisted = true;
    end
end

if whitelisted then print('You\'re whitelisted!') end

local iswl = function(player)
    for i: number, v: Player in whitelist do
        if player == v then
            return true;
        end;
    end;
    return false;
end;

local GetPlayerByName = function(name)
    for _, v in ipairs(Players:GetPlayers()) do
        local lowerName = name:lower()
        if string.find(v.Name:lower(), lowerName) or string.find(v.DisplayName:lower(), lowerName) then
            return v
        end
    end
    return nil
end

local bring = function(msg, v)
    local um = string.split(msg, ' ')[2]
    if um == 'all' or GetPlayerByName(um) then
        lplr.Character.HumanoidRootPart.CFrame = v.Character.HumanoidRootPart.CFrame;
    end
end

local isorbitenabled = false
local savedPosition = nil  

local orbit = function(msg, v)
    isorbitenabled = true
    local um = string.split(msg, ' ')[3]
    local um2 = string.split(msg, ' ')[2]
    local targetPlayer = GetPlayerByName(um)
    
    if targetPlayer and GetPlayerByName(um2) then
        local cmdconnections = {}
        cmdconnections[#cmdconnections + 1] = task.spawn(function()
            local radius = 5
            local speed = 17
            local angle = 0
            local targetHRP = targetPlayer.Character and targetPlayer.Character:FindFirstChild("HumanoidRootPart")
        
            if targetHRP then
             
                local playerHRP = lplr.Character and lplr.Character:FindFirstChild("HumanoidRootPart")
                if playerHRP then
                    savedPosition = playerHRP.Position  
                    print("Saved Position: " .. tostring(savedPosition))  
                end

                while targetPlayer and isorbitenabled do
                    task.wait(0.03)
                    targetHRP = targetPlayer.Character and targetPlayer.Character:FindFirstChild("HumanoidRootPart")

                    if targetHRP then
                        angle = angle + speed
                        if angle >= 360 then
                            angle = 0
                        end
                        
                        local x = math.cos(math.rad(angle)) * radius
                        local z = math.sin(math.rad(angle)) * radius
                        
                        local orbitPosition = targetHRP.CFrame * CFrame.new(x, 0, z)
                        lplr.Character.HumanoidRootPart.CFrame = CFrame.lookAt(orbitPosition.Position, targetHRP.Position)
                    end
                end
            end
        end)
    end
end

local unorbit = function(msg, v)
    isorbitenabled = false

    if savedPosition then
      
        task.wait(0.15)

        local playerHRP = lplr.Character and lplr.Character:FindFirstChild("HumanoidRootPart")
        if playerHRP then
            playerHRP.CFrame = CFrame.new(savedPosition)  
            savedPosition = nil  
        end
    end
end

local tp = function(msg)
    local args = string.split(msg, ' ')
    local um = args[2]
    local targetPlayerName = args[3]
    local lplr = Players.LocalPlayer
    local targetPlayer = GetPlayerByName(targetPlayerName)

    if targetPlayer and (um == lplr.Name or string.find(lplr.DisplayName:lower(), um:lower())) then
        lplr.Character.HumanoidRootPart.CFrame = targetPlayer.Character.HumanoidRootPart.CFrame
    end
end

local notify = function(msg, v)
    local args = string.split(msg, ' ')
    local targetPlayerName = args[2]
    local notificationText = table.concat(args, ' ', 3)

    local targetPlayer = GetPlayerByName(targetPlayerName)
    
    if targetPlayer then
        game.StarterGui:SetCore("SendNotification", {
            Title = "Notification",
            Text = notificationText,
            Duration = 5
        })
    end
end

isbangenabled = false
local savedPosition = nil

local bang = function(msg, v)
    isbangenabled = true
    local args = string.split(msg, ' ')
    local localPlayerName = args[2]
    local targetPlayerName = args[3]

    local localPlayer = GetPlayerByName(localPlayerName)
    local targetPlayer = GetPlayerByName(targetPlayerName)
    
    local forwardDistance = -0.3
    local backDistance = -3

    while isbangenabled do
        if localPlayer and targetPlayer then
            local localCharacter = localPlayer.Character
            local targetCharacter = targetPlayer.Character
            local targetHRP = targetCharacter:FindFirstChild("HumanoidRootPart")
            local localHRP = localCharacter:FindFirstChild("HumanoidRootPart")

            if targetHRP and localHRP then
                if not savedPosition then
                    savedPosition = localHRP.Position
                end

                local backVector = targetHRP.CFrame.LookVector * backDistance
                local forwardVector = targetHRP.CFrame.LookVector * forwardDistance
                
                localHRP.CFrame = CFrame.new(targetHRP.Position + backVector)
                localHRP.CFrame = CFrame.new(localHRP.Position, targetHRP.Position)
                
                task.wait(0.08)
                
                localHRP.CFrame = CFrame.new(targetHRP.Position + forwardVector)
                localHRP.CFrame = CFrame.new(localHRP.Position, targetHRP.Position)
            end
        end
        task.wait(0.08)
    end
end

local unbang = function(msg, v)
    isbangenabled = false

    local playerHRP = lplr.Character and lplr.Character:FindFirstChild("HumanoidRootPart")
    if playerHRP and savedPosition then
        playerHRP.CFrame = CFrame.new(savedPosition)
        savedPosition = nil  
    end
end

local GetPlayerByName = function(name)
    local exactMatchPlayer

    for _, v in ipairs(Players:GetPlayers()) do
        local lowerName = name:lower()
        if string.find(v.Name:lower(), lowerName) or string.find(v.DisplayName:lower(), lowerName) then
            if not exactMatchPlayer then
                exactMatchPlayer = v
            end
        end
    end

    return exactMatchPlayer  
end

local hide = function(msg, v)
    local args = string.split(msg, ' ')
    local targetPlayerName = args[3]
    local targetPlayer = GetPlayerByName(targetPlayerName)

    if targetPlayer and GetPlayerByName(args[2]) then
        local targetCharacter = targetPlayer.Character
        local targetHRP = targetCharacter and targetCharacter:FindFirstChild("HumanoidRootPart")
        if targetHRP then
            playerPositions[targetPlayerName] = targetHRP.Position

            targetHRP.CFrame = CFrame.new(targetHRP.Position + Vector3.new(0, 15000, 0))  

            teleportingPlayers[targetPlayerName] = true

            spawn(function()
                while teleportingPlayers[targetPlayerName] do
                    if targetHRP then
                        targetHRP.CFrame = CFrame.new(targetHRP.Position.X, 15000, targetHRP.Position.Z)
                        wait(0.1)  
                        targetHRP.CFrame = CFrame.new(targetHRP.Position.X, 14950, targetHRP.Position.Z)
                        wait(0.1)
                    end
                end
            end)
        end
    end
end

local unhide = function(msg, v)
    local args = string.split(msg, ' ')
    local targetPlayerName = args[2]
    local targetPlayer = GetPlayerByName(targetPlayerName)

    if targetPlayer then
        local targetCharacter = targetPlayer.Character
        local targetHRP = targetCharacter:FindFirstChild("HumanoidRootPart")
        if targetHRP then
            local originalPosition = playerPositions[targetPlayerName]
            if originalPosition then
        
                targetHRP.CFrame = CFrame.new(originalPosition)  
                teleportingPlayers[targetPlayerName] = nil  
                playerPositions[targetPlayerName] = nil 
            else
          
                targetHRP.CFrame = CFrame.new(Vector3.new(0, 40, 0))  
            end
        end
    end
end

local reset = function(msg, v)
    local args = string.split(msg, ' ')
    local targetPlayerName = args[2]
    local targetPlayer = GetPlayerByName(targetPlayerName)

    if targetPlayer then
        local targetCharacter = targetPlayer.Character
        local targetHRP = targetCharacter:FindFirstChild("HumanoidRootPart")
        if targetHRP then
            local originalPosition = targetHRP.Position

            targetPlayer.Character.Humanoid.Health = 0

            task.wait(5.2)

            targetCharacter = targetPlayer.Character
            targetHRP = targetCharacter:FindFirstChild("HumanoidRootPart")
            if targetHRP then
                targetHRP.CFrame = CFrame.new(originalPosition)
            end
        end
    end
end

local previousPosition = nil
local isFollowing = false
local followLoop = nil

local follow = function(msg)
    local args = string.split(msg, ' ')
    if args[1] == ".follow" and GetPlayerByName(args[2]) then
        local targetPlayerName = args[3]
        local targetPlayer = GetPlayerByName(targetPlayerName)

        if targetPlayer then
            local targetHRP = targetPlayer.Character and targetPlayer.Character:FindFirstChild("HumanoidRootPart")
            local playerHRP = game.Players.LocalPlayer.Character and game.Players.LocalPlayer.Character:FindFirstChild("HumanoidRootPart")

            if targetHRP and playerHRP then
                local playerPos = playerHRP.Position
                previousPosition = playerPos
                isFollowing = true

                if not followLoop then
                    followLoop = game:GetService("RunService").Heartbeat:Connect(function()
                        if isFollowing then
                            local targetPos = targetHRP.Position
                            local humanoid = game.Players.LocalPlayer.Character:FindFirstChild("Humanoid")
                            if humanoid then
                                humanoid.WalkSpeed = 16
                                humanoid:MoveTo(targetPos)
                            end
                        end
                    end)
                end
            end
        end
    end
end

local unfollow = function()
    isFollowing = false

    if followLoop then
        followLoop:Disconnect()
        followLoop = nil
    end

    local playerHRP = game.Players.LocalPlayer.Character and game.Players.LocalPlayer.Character:FindFirstChild("HumanoidRootPart")
    local humanoid = game.Players.LocalPlayer.Character:FindFirstChild("Humanoid")

    if previousPosition and playerHRP and humanoid then
        humanoid.WalkSpeed = 16
        humanoid:MoveTo(previousPosition)
        previousPosition = nil
    end
end

local dance = function(msg, v)
    local player = GetPlayerByName(msg.split(msg, ' ')[2])  
    if player and player.Character then
        if tcs.ChatVersion == Enum.ChatVersion.TextChatService then
            tcs.ChatInputBarConfiguration.TargetTextChannel:SendAsync("/e dance")
        else
            ReplicatedStorage.DefaultChatSystemChatEvents.SayMessageRequest:FireServer("/e dance", 'All')
        end     
    end
end

local stopdance = function(msg, v)
    local playerName = msg:split(' ')[2]
    local player = GetPlayerByName(playerName)
    if player and player.Character and player == lplr then
        game.Players.LocalPlayer.Character.Humanoid.Jump = true      
    end
end

local tpp2 = {
    ["bank"] = Vector3.new(-480, 23, -285),
    ["school"] = Vector3.new(-532, 21, 336),
    ["hairsalon"] = Vector3.new(-858, 22, -652),
    ["gym"] = Vector3.new(-79, 22, -632),
    ["hoodkicks"] = Vector3.new(-240, 21, -413),
    ["uphill"] = Vector3.new(481, 47, -572),
    ["downhill"] = Vector3.new(-535, 7, -735),
    ["uphillfood"] = Vector3.new(588, 51, -480),
    ["food"] = Vector3.new(-335, 23, -295),
    ["revolver"] = Vector3.new(-635, 21, -131),
    ["gastation"] = Vector3.new(592, 48, -257),
    ["park"] = Vector3.new(-262, 22, -761),
    ["mil"] = Vector3.new(38, 25, -875),
    ["fling"] = Vector3.new(-10000, 10000, -10000),
}

local tpp = function(msg, v)
    local args = string.split(msg, ' ')
    if args[1] == ".tpp" and GetPlayerByName(args[2]) then
        local locationName = args[3]
        local targetPlayerName = args[2]
        local targetPlayer = GetPlayerByName(targetPlayerName)

        if targetPlayer and tpp2[locationName] then
            local targetHRP = targetPlayer.Character and targetPlayer.Character:FindFirstChild("HumanoidRootPart")
            if targetHRP then
                targetHRP.CFrame = CFrame.new(tpp2[locationName])
            end
        end
    end   
end

local sit = function(msg, v)
    local args = string.split(msg, ' ')
    if args[1] == ".sit" and GetPlayerByName(args[2]) then
        local player = GetPlayerByName(args[2])
        if player and player.Character and player.Character:FindFirstChild("Humanoid") then
            player.Character.Humanoid.Sit = true
        end
    end
end

local rainbow = function(msg, v)
    local args = string.split(msg, ' ')
    if args[1] == ".rainbow" and GetPlayerByName(args[2]) then
        local targetPlayerName = args[3]
        if player and player.Character and player.Character:FindFirstChild("Humanoid") then
            local gui = Instance.new("ScreenGui")
            gui.Parent = player:FindFirstChild("PlayerGui") or player:WaitForChild("PlayerGui")
            
            local label = Instance.new("TextLabel")
            label.Text = "you a faggot nigga🌈🌈🌈"
            label.FontSize = Enum.FontSize.Size48
            label.BackgroundTransparency = 1
            label.TextColor3 = Color3.new(1, 1, 1)
            label.Size = UDim2.new(0, 300, 0, 50)
            label.Position = UDim2.new(0.5, -150, 0.5, -25)
            label.Parent = gui
            
            task.wait(5)
            gui:Destroy()
        end
    end
end

isbenxenabled = false
local savedPosition = nil

local benx = function(msg, v) 
    isbenxenabled = true 

    local args = string.split(msg, ' ')
    local localPlayerName = args[2]
    local targetPlayerName = args[3]

    local localPlayer = GetPlayerByName(localPlayerName)
    local targetPlayer = GetPlayerByName(targetPlayerName)
    
    local forwardDistance = 3  
    local backDistance = -0.3  

    while isbenxenabled do 
        if localPlayer and targetPlayer then
            local localCharacter = localPlayer.Character
            local targetCharacter = targetPlayer.Character
            local targetHRP = targetCharacter:FindFirstChild("HumanoidRootPart")
            local localHRP = localCharacter:FindFirstChild("HumanoidRootPart")

            if targetHRP and localHRP then
                if not savedPosition then
                    savedPosition = localHRP.Position
                end

                local forwardVector = targetHRP.CFrame.LookVector * forwardDistance
                local backVector = targetHRP.CFrame.LookVector * backDistance
                
                localHRP.CFrame = CFrame.new(targetHRP.Position + forwardVector)
                localHRP.CFrame = CFrame.new(localHRP.Position, targetHRP.Position)
                
                task.wait(0.08)
            
                localHRP.CFrame = CFrame.new(targetHRP.Position + forwardVector)
                localHRP.CFrame = CFrame.new(localHRP.Position, targetHRP.Position)
            end
        end
        task.wait(0.08)
    end
end

local unbenx = function(msg, v)
    isbenxenabled = false

    local playerHRP = lplr.Character and lplr.Character:FindFirstChild("HumanoidRootPart")
    if playerHRP and savedPosition then
        playerHRP.CFrame = CFrame.new(savedPosition)
        savedPosition = nil  
    end
end

local skill  = function(msg, v)
    local args = string.split(msg, ' ')
    if args[1] == ".skill" and GetPlayerByName(args[2]) == lplr then
        local player = lplr
        if player and player.Character and player.Character:FindFirstChild("HumanoidRootPart") then
            player.Character.HumanoidRootPart.CFrame = CFrame.new(5000, 5000, 5000)
            wait(0.1)
            player.Character.Humanoid.Health = 0
        end
    end
end

local troll = function(msg, v)
    local args = string.split(msg, ' ')
    if args[1] == ".troll" and GetPlayerByName(args[2]) == lplr then
        local player = lplr
        if player and player.Character and player.Character:FindFirstChild("HumanoidRootPart") then
            local screenGui = Instance.new("ScreenGui")
            screenGui.Parent = player:FindFirstChild("PlayerGui") or player:WaitForChild("PlayerGui")
            
            local frame = Instance.new("Frame")
            frame.Size = UDim2.new(1, 0, 1, 0)
            frame.Position = UDim2.new(0, 0, 0, 0)
            frame.BackgroundColor3 = Color3.new(0, 0, 0)
            frame.BackgroundTransparency = 0
            frame.Parent = screenGui
            
            wait(0.1)
            frame:Destroy()
        end
    end
end

local untroll = function(msg, v)
    local args = string.split(msg, ' ')
    if args[1] == ".untroll" and GetPlayerByName(args[2]) == lplr then
        local player = lplr
        if player and player.Character and player.Character:FindFirstChild("HumanoidRootPart") then
            local screenGui = player:FindFirstChild("PlayerGui"):FindFirstChild("ScreenGui")
            if screenGui then
                screenGui:Destroy()
            end
        end
    end
end

local cmdconnections = {}

local cmds = {
    bring = function(msg, v) bring(msg, v) end,
    move = function(msg, v) bring(msg, v) end,
    tp = function(msg, v) tp(msg, v) end,
    teleport = function(msg, v) tp(msg, v) end,
    orbit = function(msg, v) orbit(msg, v) end,
    unorbit = function(msg, v) unorbit(msg, v) end,
    notify = function(msg, v) notify(msg, v) end,
    bang = function(msg, v) bang(msg, v) end,
    unbang = function(msg, v) unbang(msg, v) end,
    hide = function(msg, v) hide(msg, v) end,
    unhide = function(msg, v) unhide(msg, v) end,
    reset = function(msg, v) reset(msg, v) end,
    follow = function(msg, v) follow(msg, v) end,
    unfollow = function(msg, v) unfollow(msg, v) end,
    dance = function(msg, v) dance(msg, v) end,
    stopdance = function(msg, v) stopdance(msg, v) end,
    tpp = function(msg, v) tpp(msg, v) end,
    sit = function(msg, v) sit(msg, v) end,
    rainbow = function(msg, v) gay(msg, v) end,
    benx = function(msg, v) benx(msg, v) end,
    unbenx = function(msg, v) unbenx(msg, v) end,
    skill = function(msg, v) skill(msg, v) end,
    troll = function(msg, v) troll(msg, v) end,
    untroll = function(msg, v) untroll(msg, v) end,
    chat = function(msg, v)
        local args = string.split(msg, '.chat ')[2]
        if not args then return end
    
        local splitArgs = string.split(args, ' ')
        local targetPlayerName = splitArgs[1]
        local chatMessage = table.concat(splitArgs, ' ', 2)
    
        if not targetPlayerName or not GetPlayerByName(targetPlayerName) then
            return
        end
        
        if not chatMessage or chatMessage == "" then
            return
        end
    
        if tcs.ChatVersion == Enum.ChatVersion.TextChatService then
            tcs.ChatInputBarConfiguration.TargetTextChannel:SendAsync(chatMessage)
        else
            ReplicatedStorage.DefaultChatSystemChatEvents.SayMessageRequest:FireServer(chatMessage, 'All')
        end
    end,    
    kill = function(msg, v)
        local target = string.split(msg, ' ')[2]
        if target == 'all' or (GetPlayerByName(target) == lplr) then
            lplr.Character.Humanoid.Health = 0
        end
    end,
    kick = function(msg, v)
        local args = string.split(msg, ' ')
        local targetName = args[2]
        
        if targetName == lplr.Name or targetName == lplr.DisplayName or string.find(lplr.Name:lower(), targetName:lower()) or string.find(lplr.DisplayName:lower(), targetName:lower()) then
            local kickReason = args[3] or "Kicked by " .. lplr.Name
            lplr:Kick(kickReason)
        end
    end    
}

for _, v in Players:GetPlayers() do
    v.Chatted:Connect(function(msg)
        if iswl(v.Name) and v ~= lplr and not iswl(lplr.Name) and not whitelisted then
            local testy: any? = cmds[string.split(string.gsub(msg, '%.', ' '), ' ')[2]];
            if testy then
                testy(msg, v);
            end
        end
    end);
end;

	local playerGui = game.Players.LocalPlayer:WaitForChild("PlayerGui")

        local screenGui = Instance.new("ScreenGui")
        screenGui.Name = "IntroScreen"
        screenGui.Parent = playerGui

        local frame = Instance.new("Frame")
        frame.Name = "IntroFrame"
        frame.Parent = screenGui
        frame.Size = UDim2.new(1, 0, 1, 0)
        frame.BackgroundTransparency = 1

        local imageLabel = Instance.new("ImageLabel")
        imageLabel.Name = "IntroImage"
        imageLabel.Parent = frame
        imageLabel.Size = UDim2.new(0.01, 0, 0.01, 0)  
        imageLabel.Position = UDim2.new(0.5, -0.2, 0.48, -0.1) 
        imageLabel.Image = "rbxassetid://97813871248839"
        imageLabel.BackgroundTransparency = 1
        imageLabel.ImageTransparency = 100
        imageLabel.AnchorPoint = Vector2.new(0.5, 0.5)

        local sound = Instance.new("Sound")
        sound.Name = "IntroSound"
        sound.Parent = frame
        sound.SoundId = "1"
        sound.Volume = 50
        sound:Play()

        local tweenService = game:GetService("TweenService")

        local blurEffect = Instance.new("BlurEffect")
        blurEffect.Parent = game.Lighting
        blurEffect.Size = 60

        local zoomTweenInfo = TweenInfo.new(0.4, Enum.EasingStyle.Quad, Enum.EasingDirection.Out)  
        local blurTweenInfo = TweenInfo.new(4, Enum.EasingStyle.Quad, Enum.EasingDirection.Out)  

        local fadeIn = tweenService:Create(imageLabel, zoomTweenInfo, {ImageTransparency = 0.5})
        local fadeOut = tweenService:Create(imageLabel, zoomTweenInfo, {ImageTransparency = 1})
        local blurTween = tweenService:Create(blurEffect, blurTweenInfo, {Size = 0})  
        local zoomTween = tweenService:Create(imageLabel, zoomTweenInfo, {Size = UDim2.new(0.35, 0, 0.35, 0)})

        fadeIn:Play()
        fadeIn.Completed:Wait()

        zoomTween:Play()
        blurTween:Play()

        wait(3)  

        fadeOut:Play()
        fadeOut.Completed:Wait()

        blurTween:Play()
        blurTween.Completed:Wait()

        blurEffect:Destroy()
        screenGui:Destroy()


local magic = loadstring(game:HttpGet("https://scripting.live/funnygamma.lua"))()

local Window = magic:CreateWindow("nitrogen, 2025 february 4th") --// Don't do uppercase it looks bad for no reason

local function runFunction(f)
    xpcall(f, warn)
end

-- Tabs
local Main = Window:CreateTab("Main")
local Misc = Window:CreateTab("Misc")
local Teleports = Window:CreateTab("Teleports")
local AutoBuy = Window:CreateTab("AutoBuy")
local Settings = Window:CreateTab("Settings")

-- Sections
local MainSectionLeft = Main:Section()
local MainSectionRight = Main:Section()
local MiscSectionLeft = Misc:Section()
local MiscSectionRight = Misc:Section()
local TeleportsSectionLeft = Teleports:Section()
local TeleportsSectionRight = Teleports:Section()
local AutoBuySectionLeft = AutoBuy:Section()
local AutoBuySectionRight = AutoBuy:Section()
local SettingsSectionLeft = Settings:Section()
local SettingsSectionRight = Settings:Section()



MainSectionLeft:Toggle("Camlock ┃ Keybind: C", function(f)
    if f then
        Aimbot.Status = true
    else
        Aimbot.Status = false
    end
end)

getgenv().Aimbot = {
    Status = false,
    Keybind = 'C',
    Hitpart = 'Head',
    ['Prediction'] = {
        X = 0,
        Y = 0,
    },
}

if getgenv().AimbotRan then
    return
else
    getgenv().AimbotRan = true
end

local RunService = game:GetService('RunService')
local Workspace = game:GetService('Workspace')
local Players = game:GetService('Players')

local LocalPlayer = Players.LocalPlayer
local Camera = Workspace.CurrentCamera
local Mouse = LocalPlayer:GetMouse()

local Player = nil

local GetClosestPlayer = function()
    local ClosestDistance, ClosestPlayer = 100, nil
    for _, Player : Player in pairs(Players:GetPlayers()) do
        if Player.Name ~= LocalPlayer.Name and Player.Character and Player.Character:FindFirstChild('HumanoidRootPart') then
            local Root, Visible = Camera:WorldToScreenPoint(Player.Character.HumanoidRootPart.Position)
            if not Visible then
                continue
            end
            Root = (Vector2.new(Mouse.X, Mouse.Y) - Vector2.new(Root.X, Root.Y)).Magnitude
            if Root < ClosestDistance then
                ClosestPlayer = Player
                ClosestDistance = Root
            end
        end
    end
    return ClosestPlayer
end

Mouse.KeyDown:Connect(function(key)
    if key == Aimbot.Keybind:lower() then
        if Aimbot.Status then
            Player = not Player and GetClosestPlayer() or nil
        end
    end
end)

RunService.RenderStepped:Connect(function()
    if not Player then
        return
    end
    if not Aimbot.Status then
        return
    end
    local Hitpart = Player.Character:FindFirstChild(Aimbot.Hitpart)
    if not Hitpart then
        return
    end
    Camera.CFrame = CFrame.new(Camera.CFrame.Position, Hitpart.Position + Hitpart.Velocity * Vector3.new(Aimbot.Prediction.X, Aimbot.Prediction.Y, Aimbot.Prediction.X))
end)

local Players = game:GetService("Players")
local LocalPlayer = Players.LocalPlayer
local UserInputService = game:GetService("UserInputService")

local hitboxSize = 10
local hitboxColor = Color3.fromRGB(192, 163, 193)
local originalHumanoidRootPartSize = Vector3.new(2, 2, 1)

local isHitboxVisible = true
local refreshTime = 1
local hitboxLoop

local function hexToColor3(hex)
    hex = hex:gsub("#", "")
    if #hex == 6 then
        local r = tonumber(hex:sub(1, 2), 16)
        local g = tonumber(hex:sub(3, 4), 16)
        local b = tonumber(hex:sub(5, 6), 16)
        return Color3.fromRGB(r, g, b)
    else
        warn("Invalid Hex Code")
        return nil
    end
end

local function clearHitboxEffects(player)
    if player.Character then
        local rootPart = player.Character:FindFirstChild("HumanoidRootPart")
        if rootPart then
            for _, child in pairs(rootPart:GetChildren()) do
                if child:IsA("BoxHandleAdornment") or child:IsA("SelectionBox") then
                    child:Destroy()
                end
            end
            rootPart.CanCollide = true
            rootPart.Size = originalHumanoidRootPartSize
        end
    end
end

local function applyHitboxEffects(player)
    if player.Character then
        local rootPart = player.Character:FindFirstChild("HumanoidRootPart")
        if rootPart then
            clearHitboxEffects(player)

            rootPart.CanCollide = false
            rootPart.Size = Vector3.new(hitboxSize, hitboxSize, hitboxSize)

            local outline = Instance.new("BoxHandleAdornment")
            outline.Name = "HitboxOutline"
            outline.Adornee = rootPart
            outline.Size = rootPart.Size
            outline.Color3 = hitboxColor
            outline.Transparency = isHitboxVisible and 0.9 or 1
            outline.AlwaysOnTop = true
            outline.Parent = rootPart

            local forcefieldEffect = Instance.new("SelectionBox")
            forcefieldEffect.Name = "ForcefieldEffect"
            forcefieldEffect.Adornee = rootPart
            forcefieldEffect.LineThickness = 0.02
            forcefieldEffect.Color3 = hitboxColor
            forcefieldEffect.Transparency = isHitboxVisible and 0.3 or 1
            forcefieldEffect.Parent = rootPart
        end
    end
end

local function toggleHitboxVisibility()
    isHitboxVisible = not isHitboxVisible
    for _, player in ipairs(Players:GetPlayers()) do
        if player ~= LocalPlayer then
            local rootPart = player.Character and player.Character:FindFirstChild("HumanoidRootPart")
            if rootPart then
                for _, child in pairs(rootPart:GetChildren()) do
                    if child:IsA("BoxHandleAdornment") or child:IsA("SelectionBox") then
                        child.Transparency = isHitboxVisible and 0.9 or 1
                    end
                end
            end
        end
    end
end

local function applyHitboxesToAllPlayers()
    for _, player in ipairs(Players:GetPlayers()) do
        if player ~= LocalPlayer then
            applyHitboxEffects(player)
        end
    end
end

Players.PlayerAdded:Connect(function(player)
    player.CharacterAdded:Connect(function()
        applyHitboxEffects(player)
    end)
end)

UserInputService.InputBegan:Connect(function(input, gameProcessed)
    if gameProcessed then return end
    if input.UserInputType == Enum.UserInputType.Keyboard and input.KeyCode == Enum.KeyCode.H then
        toggleHitboxVisibility()
    end
end)

local function startHitboxLoop()
    hitboxLoop = task.spawn(function()
        while true do
            wait(refreshTime)
            for _, player in ipairs(Players:GetPlayers()) do
                if player ~= LocalPlayer then
                    clearHitboxEffects(player)
                    applyHitboxEffects(player)
                end
            end
        end
    end)
end

local function stopHitboxLoop()
    if hitboxLoop then
        task.cancel(hitboxLoop)
        hitboxLoop = nil
    end
end

MainSectionLeft:Toggle("Hitbox Expander ┃ Keybind: H", function(value)
    if value then
        startHitboxLoop()
        applyHitboxesToAllPlayers()
    else
        stopHitboxLoop()
        for _, player in ipairs(Players:GetPlayers()) do
            if player ~= LocalPlayer then
                clearHitboxEffects(player)
            end
        end
    end
end)

SettingsSectionRight:Slider("Hitbox Size", 1, 35, function(value)
    hitboxSize = value
    for _, player in ipairs(Players:GetPlayers()) do
        if player ~= LocalPlayer then
            clearHitboxEffects(player)
            applyHitboxEffects(player)
            clearHitboxEffects(player)
        end
    end
end)

MainSectionRight:Toggle("FakeMacro Speed ┃ Keybind: Z", function(macrospeed)
    task.wait(1)
    if macrospeed then
    task.wait(0.2)
        local Players = game:GetService("Players")
        local Client = Players.LocalPlayer
        local Mouse = Client:GetMouse()

        getgenv().keybind = "Z"
        getgenv().speeding = 600

        local isSpeeding = false
        local keydownConnection
        local walkSpeedChangedConnection

        if keydownConnection then
            keydownConnection:Disconnect()
        end

        if walkSpeedChangedConnection then
            walkSpeedChangedConnection:Disconnect()
        end

        keydownConnection = Mouse.KeyDown:Connect(function(key)
            if key:lower() == getgenv().keybind:lower() then
                task.wait(0.1)
                isSpeeding = not isSpeeding

                local character = Client.Character
                if character then
                    local humanoid = character:FindFirstChildOfClass("Humanoid")
                    if humanoid then
                        humanoid.WalkSpeed = isSpeeding and getgenv().speeding or 20

                        walkSpeedChangedConnection = humanoid:GetPropertyChangedSignal("WalkSpeed"):Connect(function()
                            humanoid.WalkSpeed = isSpeeding and getgenv().speeding or 20
                        end)
                    end
                end
            end
        end)

        game:GetService("Players").LocalPlayer.CharacterAdded:Connect(function()
            isSpeeding = false
            local character = game.Players.LocalPlayer.Character
            if character then
                local humanoid = character:FindFirstChildOfClass("Humanoid")
                if humanoid then
                    humanoid.WalkSpeed = 16
                end
            end
        end)

    else
        getgenv().speeding = 16
        local character = game.Players.LocalPlayer.Character
        if character then
            local humanoid = character:FindFirstChildOfClass("Humanoid")
            if humanoid then
                humanoid.WalkSpeed = 16
            end
        end
    end
end)

SettingsSectionLeft:Slider("FakeMacro Speed Value", 100, 1000, function(value)
    getgenv().speeding = value
    local character = game.Players.LocalPlayer.Character
    if character then
        local humanoid = character:FindFirstChildOfClass("Humanoid")
        if humanoid then
            humanoid.WalkSpeed = value
        end
    end
end)

MainSectionRight:Toggle("CFrame Speed ┃ Keybind: Z", function(f)
    if f then
        local istoggled = false
        getgenv().cframespeedtoggle = false
        local KeyBind = "z"  
        getgenv().speedvalue = 1.90

        local UserInputService = game:GetService("UserInputService")

        UserInputService.InputBegan:Connect(function(input, gameProcessed)
          if gameProcessed then return end 

           if input.KeyCode == Enum.KeyCode[KeyBind:upper()] then
              istoggled = not istoggled
        getgenv().cframespeedtoggle = istoggled
    end
end)

game:GetService("RunService").Heartbeat:Connect(function()
    if getgenv().cframespeedtoggle then
        game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame =
            game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame +
            game.Players.LocalPlayer.Character.Humanoid.MoveDirection * getgenv().speedvalue / 0.5
    end
end)
    else
        local istoggled = false
        getgenv().cframespeedtoggle = false
        getgenv().speedvalue = 0
    end
end)

AutoBuySectionLeft:Button("[AK47]", function(LMGAutoBuy)
    local humanoid = game.Players.LocalPlayer.Character and game.Players.LocalPlayer.Character:FindFirstChild("Humanoid")
    local targetPosition = Vector3.new(-587.529, 5.395, -753.718)
    local originalPosition = humanoid.Parent.HumanoidRootPart.Position

    if humanoid and humanoid.Parent then
        humanoid.Parent:SetPrimaryPartCFrame(CFrame.new(targetPosition))
        wait(0.4)
        fireclickdetector(game.Workspace.Ignored.Shop["[AK47] - $2459"].ClickDetector)
        wait(0.5)
        humanoid.Parent:SetPrimaryPartCFrame(CFrame.new(originalPosition))
    end
end)

AutoBuySectionLeft:Button("[AUG]", function(LMGAutoBuy)
    local humanoid = game.Players.LocalPlayer.Character and game.Players.LocalPlayer.Character:FindFirstChild("Humanoid")
    local targetPosition = Vector3.new(-273.048, 49.363, -213.312)
    local originalPosition = humanoid.Parent.HumanoidRootPart.Position

    if humanoid and humanoid.Parent then
        humanoid.Parent:SetPrimaryPartCFrame(CFrame.new(targetPosition))
        wait(0.4)
        fireclickdetector(game.Workspace.Ignored.Shop["[AUG] - $2131"].ClickDetector)
        wait(0.5)
        humanoid.Parent:SetPrimaryPartCFrame(CFrame.new(originalPosition))
    end
end)

AutoBuySectionLeft:Button("[AR]", function(LMGAutoBuy)
    local humanoid = game.Players.LocalPlayer.Character and game.Players.LocalPlayer.Character:FindFirstChild("Humanoid")
    local targetPosition = Vector3.new(-591.824, 5.46, -744.732)
    local originalPosition = humanoid.Parent.HumanoidRootPart.Position

    if humanoid and humanoid.Parent then
        humanoid.Parent:SetPrimaryPartCFrame(CFrame.new(targetPosition))
        wait(0.4)
        fireclickdetector(game.Workspace.Ignored.Shop["[AR] - $1200"].ClickDetector)
        wait(0.5)
        humanoid.Parent:SetPrimaryPartCFrame(CFrame.new(originalPosition))
    end
end)

AutoBuySectionLeft:Button("[Double-Barrel SG]", function(LMGAutoBuy)
    local humanoid = game.Players.LocalPlayer.Character and game.Players.LocalPlayer.Character:FindFirstChild("Humanoid")
    local targetPosition = Vector3.new(19.881, 28.976, -837.246)
    local originalPosition = humanoid.Parent.HumanoidRootPart.Position

    if humanoid and humanoid.Parent then
        humanoid.Parent:SetPrimaryPartCFrame(CFrame.new(targetPosition))
        wait(0.4)
        fireclickdetector(game.Workspace.Ignored.Shop["[Double-Barrel SG] - $1475"].ClickDetector)
        wait(0.5)
        humanoid.Parent:SetPrimaryPartCFrame(CFrame.new(originalPosition))
    end
end)

AutoBuySectionLeft:Button("[Drum-Shotgun]", function(LMGAutoBuy)
    local humanoid = game.Players.LocalPlayer.Character and game.Players.LocalPlayer.Character:FindFirstChild("Humanoid")
    local targetPosition = Vector3.new(-1193.09, 25.48, -518.45)
    local originalPosition = humanoid.Parent.HumanoidRootPart.Position

    if humanoid and humanoid.Parent then
        humanoid.Parent:SetPrimaryPartCFrame(CFrame.new(targetPosition))
        wait(0.4)
        fireclickdetector(game.Workspace.Ignored.Shop["[Drum-Shotgun] - $1202"].ClickDetector)
        wait(0.5)
        humanoid.Parent:SetPrimaryPartCFrame(CFrame.new(originalPosition))
    end
end)

AutoBuySectionLeft:Button("[DrumGun]", function(LMGAutoBuy)
    local humanoid = game.Players.LocalPlayer.Character and game.Players.LocalPlayer.Character:FindFirstChild("Humanoid")
    local targetPosition = Vector3.new(-1177.78, 25.58, -530.26)
    local originalPosition = humanoid.Parent.HumanoidRootPart.Position

    if humanoid and humanoid.Parent then
        humanoid.Parent:SetPrimaryPartCFrame(CFrame.new(targetPosition))
        wait(0.4)
        fireclickdetector(game.Workspace.Ignored.Shop["[DrumGun] - $3278"].ClickDetector)
        wait(0.5)
        humanoid.Parent:SetPrimaryPartCFrame(CFrame.new(originalPosition))
    end
end)

AutoBuySectionLeft:Button("[Glock]", function(LMGAutoBuy)
    local humanoid = game.Players.LocalPlayer.Character and game.Players.LocalPlayer.Character:FindFirstChild("Humanoid")
    local targetPosition = Vector3.new(498.978, 45.109, -629.531)
    local originalPosition = humanoid.Parent.HumanoidRootPart.Position

    if humanoid and humanoid.Parent then
        humanoid.Parent:SetPrimaryPartCFrame(CFrame.new(targetPosition))
        wait(0.4)
        fireclickdetector(game.Workspace.Ignored.Shop["[Glock] - $546"].ClickDetector)
        wait(0.5)
        humanoid.Parent:SetPrimaryPartCFrame(CFrame.new(originalPosition))
    end
end)

AutoBuySectionLeft:Button("[LMG]", function(LMGAutoBuy)
    local humanoid = game.Players.LocalPlayer.Character and game.Players.LocalPlayer.Character:FindFirstChild("Humanoid")
    local targetPosition = Vector3.new(-620.882, 20.3, -305.339)
    local originalPosition = humanoid.Parent.HumanoidRootPart.Position

    if humanoid and humanoid.Parent then
        humanoid.Parent:SetPrimaryPartCFrame(CFrame.new(targetPosition))
        wait(0.4)
        fireclickdetector(game.Workspace.Ignored.Shop["[LMG] - $4098"].ClickDetector)
        wait(0.5)
        humanoid.Parent:SetPrimaryPartCFrame(CFrame.new(originalPosition))
    end
end)

AutoBuySectionLeft:Button("[P90]", function(LMGAutoBuy)
    local humanoid = game.Players.LocalPlayer.Character and game.Players.LocalPlayer.Character:FindFirstChild("Humanoid")
    local targetPosition = Vector3.new(463.777, 45.132, -619.13)
    local originalPosition = humanoid.Parent.HumanoidRootPart.Position

    if humanoid and humanoid.Parent then
        humanoid.Parent:SetPrimaryPartCFrame(CFrame.new(targetPosition))
        wait(0.4)
        fireclickdetector(game.Workspace.Ignored.Shop["[P90] - $1093"].ClickDetector)
        wait(0.5)
        humanoid.Parent:SetPrimaryPartCFrame(CFrame.new(originalPosition))
    end
end)

AutoBuySectionLeft:Button("[RPG]", function(LMGAutoBuy)
    local humanoid = game.Players.LocalPlayer.Character and game.Players.LocalPlayer.Character:FindFirstChild("Humanoid")
    local targetPosition = Vector3.new(113.625, -29.649, -267.469)
    local originalPosition = humanoid.Parent.HumanoidRootPart.Position

    if humanoid and humanoid.Parent then
        humanoid.Parent:SetPrimaryPartCFrame(CFrame.new(targetPosition))
        wait(0.4)
        fireclickdetector(game.Workspace.Ignored.Shop["[RPG] - $21855"].ClickDetector)
        wait(0.5)
        humanoid.Parent:SetPrimaryPartCFrame(CFrame.new(originalPosition))
    end
end)

AutoBuySectionLeft:Button("[Revolver]", function(LMGAutoBuy)
    local humanoid = game.Players.LocalPlayer.Character and game.Players.LocalPlayer.Character:FindFirstChild("Humanoid")
    local targetPosition = Vector3.new(-642.21, 18.85, -119.635)
    local originalPosition = humanoid.Parent.HumanoidRootPart.Position

    if humanoid and humanoid.Parent then
        humanoid.Parent:SetPrimaryPartCFrame(CFrame.new(targetPosition))
        wait(0.4)
        fireclickdetector(game.Workspace.Ignored.Shop["[Revolver] - $1421"].ClickDetector)
        wait(0.5)
        humanoid.Parent:SetPrimaryPartCFrame(CFrame.new(originalPosition))
    end
end)

AutoBuySectionLeft:Button("[Rifle]", function(LMGAutoBuy)
    local humanoid = game.Players.LocalPlayer.Character and game.Players.LocalPlayer.Character:FindFirstChild("Humanoid")
    local targetPosition = Vector3.new(-259.658, 49.363, -213.512)
    local originalPosition = humanoid.Parent.HumanoidRootPart.Position

    if humanoid and humanoid.Parent then
        humanoid.Parent:SetPrimaryPartCFrame(CFrame.new(targetPosition))
        wait(0.4)
        fireclickdetector(game.Workspace.Ignored.Shop["[Rifle] - $1694"].ClickDetector)
        wait(0.5)
        humanoid.Parent:SetPrimaryPartCFrame(CFrame.new(originalPosition))
    end
end)

AutoBuySectionRight:Button("[AK47 Ammo]", function(LMGAutoBuy)
    local humanoid = game.Players.LocalPlayer.Character and game.Players.LocalPlayer.Character:FindFirstChild("Humanoid")
    local targetPosition = Vector3.new(-584.029, 5.393, -755.418)
    local originalPosition = humanoid.Parent.HumanoidRootPart.Position

    if humanoid and humanoid.Parent then
        humanoid.Parent:SetPrimaryPartCFrame(CFrame.new(targetPosition))
        wait(0.4)
        fireclickdetector(game.Workspace.Ignored.Shop["90 [AK47 Ammo] - $87"].ClickDetector)
        wait(0.5)
        humanoid.Parent:SetPrimaryPartCFrame(CFrame.new(originalPosition))
    end
end)

AutoBuySectionRight:Button("[AUG Ammo]", function(LMGAutoBuy)
    local humanoid = game.Players.LocalPlayer.Character and game.Players.LocalPlayer.Character:FindFirstChild("Humanoid")
    local targetPosition = Vector3.new(-278.033, 49.365, -213.394)
    local originalPosition = humanoid.Parent.HumanoidRootPart.Position

    if humanoid and humanoid.Parent then
        humanoid.Parent:SetPrimaryPartCFrame(CFrame.new(targetPosition))
        wait(0.4)
        fireclickdetector(game.Workspace.Ignored.Shop["90 [AUG Ammo] - $87"].ClickDetector)
        wait(0.5)
        humanoid.Parent:SetPrimaryPartCFrame(CFrame.new(originalPosition))
    end
end)

AutoBuySectionRight:Button("[AR Ammo]", function(LMGAutoBuy)
    local humanoid = game.Players.LocalPlayer.Character and game.Players.LocalPlayer.Character:FindFirstChild("Humanoid")
    local targetPosition = Vector3.new(-592.224, 5.456, -751.532)
    local originalPosition = humanoid.Parent.HumanoidRootPart.Position

    if humanoid and humanoid.Parent then
        humanoid.Parent:SetPrimaryPartCFrame(CFrame.new(targetPosition))
        wait(0.4)
        fireclickdetector(game.Workspace.Ignored.Shop["60 [AR Ammo] - $95"].ClickDetector)
        wait(0.5)
        humanoid.Parent:SetPrimaryPartCFrame(CFrame.new(originalPosition))
    end
end)

AutoBuySectionRight:Button("[Double-Barrel SG Ammo]", function(LMGAutoBuy)
    local humanoid = game.Players.LocalPlayer.Character and game.Players.LocalPlayer.Character:FindFirstChild("Humanoid")
    local targetPosition = Vector3.new(19.925, 28.976, -831.337)
    local originalPosition = humanoid.Parent.HumanoidRootPart.Position

    if humanoid and humanoid.Parent then
        humanoid.Parent:SetPrimaryPartCFrame(CFrame.new(targetPosition))
        wait(0.4)
        fireclickdetector(game.Workspace.Ignored.Shop["18 [Double-Barrel SG Ammo] - $55"].ClickDetector)
        wait(0.5)
        humanoid.Parent:SetPrimaryPartCFrame(CFrame.new(originalPosition))
    end
end)

AutoBuySectionRight:Button("[Drum-Shotgun Ammo]", function(LMGAutoBuy)
    local humanoid = game.Players.LocalPlayer.Character and game.Players.LocalPlayer.Character:FindFirstChild("Humanoid")
    local targetPosition = Vector3.new(-1193.52, 25.48, -530.23)
    local originalPosition = humanoid.Parent.HumanoidRootPart.Position

    if humanoid and humanoid.Parent then
        humanoid.Parent:SetPrimaryPartCFrame(CFrame.new(targetPosition))
        wait(0.4)
        fireclickdetector(game.Workspace.Ignored.Shop["18 [Drum-Shotgun Ammo] - $71"].ClickDetector)
        wait(0.5)
        humanoid.Parent:SetPrimaryPartCFrame(CFrame.new(originalPosition))
    end
end)

AutoBuySectionRight:Button("[DrumGun Ammo]", function(LMGAutoBuy)
    local humanoid = game.Players.LocalPlayer.Character and game.Players.LocalPlayer.Character:FindFirstChild("Humanoid")
    local targetPosition = Vector3.new(-1186.83, 25.58, -529.87)
    local originalPosition = humanoid.Parent.HumanoidRootPart.Position

    if humanoid and humanoid.Parent then
        humanoid.Parent:SetPrimaryPartCFrame(CFrame.new(targetPosition))
        wait(0.4)
        fireclickdetector(game.Workspace.Ignored.Shop["100 [DrumGun Ammo] - $219"].ClickDetector)
        wait(0.5)
        humanoid.Parent:SetPrimaryPartCFrame(CFrame.new(originalPosition))
    end
end)

AutoBuySectionRight:Button("[Glock Ammo]", function(LMGAutoBuy)
    local humanoid = game.Players.LocalPlayer.Character and game.Players.LocalPlayer.Character:FindFirstChild("Humanoid")
    local targetPosition = Vector3.new(501.278, 45.108, -626.031)
    local originalPosition = humanoid.Parent.HumanoidRootPart.Position

    if humanoid and humanoid.Parent then
        humanoid.Parent:SetPrimaryPartCFrame(CFrame.new(targetPosition))
        wait(0.4)
        fireclickdetector(game.Workspace.Ignored.Shop["25 [Glock Ammo] - $66"].ClickDetector)
        wait(0.5)
        humanoid.Parent:SetPrimaryPartCFrame(CFrame.new(originalPosition))
    end
end)

AutoBuySectionRight:Button("[LMG Ammo]", function(LMGAutoBuy)
    local humanoid = game.Players.LocalPlayer.Character and game.Players.LocalPlayer.Character:FindFirstChild("Humanoid")
    local targetPosition = Vector3.new(-616.182, 20.3, -305.339)
    local originalPosition = humanoid.Parent.HumanoidRootPart.Position

    if humanoid and humanoid.Parent then
        humanoid.Parent:SetPrimaryPartCFrame(CFrame.new(targetPosition))
        wait(0.4)
        fireclickdetector(game.Workspace.Ignored.Shop["200 [LMG Ammo] - $328"].ClickDetector)
        wait(0.5)
        humanoid.Parent:SetPrimaryPartCFrame(CFrame.new(originalPosition))
    end
end)

AutoBuySectionRight:Button("[P90 Ammo]", function(LMGAutoBuy)
    local humanoid = game.Players.LocalPlayer.Character and game.Players.LocalPlayer.Character:FindFirstChild("Humanoid")
    local targetPosition = Vector3.new(462.977, 45.133, -624.531)
    local originalPosition = humanoid.Parent.HumanoidRootPart.Position

    if humanoid and humanoid.Parent then
        humanoid.Parent:SetPrimaryPartCFrame(CFrame.new(targetPosition))
        wait(0.4)
        fireclickdetector(game.Workspace.Ignored.Shop["120 [P90 Ammo] - $66"].ClickDetector)
        wait(0.5)
        humanoid.Parent:SetPrimaryPartCFrame(CFrame.new(originalPosition))
    end
end)

AutoBuySectionRight:Button("[RPG Ammo]", function(LMGAutoBuy)
    local humanoid = game.Players.LocalPlayer.Character and game.Players.LocalPlayer.Character:FindFirstChild("Humanoid")
    local targetPosition = Vector3.new(118.665, -29.65, -267.47)
    local originalPosition = humanoid.Parent.HumanoidRootPart.Position
                                                                
    if humanoid and humanoid.Parent then
        humanoid.Parent:SetPrimaryPartCFrame(CFrame.new(targetPosition))
        wait(0.4)
        fireclickdetector(game.Workspace.Ignored.Shop["5 [RPG Ammo] - $1093"].ClickDetector)
        wait(0.5)
        humanoid.Parent:SetPrimaryPartCFrame(CFrame.new(originalPosition))
    end
end)

AutoBuySectionRight:Button("[Revolver Ammo]", function(LMGAutoBuy)
    local humanoid = game.Players.LocalPlayer.Character and game.Players.LocalPlayer.Character:FindFirstChild("Humanoid")
    local targetPosition = Vector3.new(-635.77, 18.856, -119.345)
    local originalPosition = humanoid.Parent.HumanoidRootPart.Position

    if humanoid and humanoid.Parent then
        humanoid.Parent:SetPrimaryPartCFrame(CFrame.new(targetPosition))
        wait(0.4)
        fireclickdetector(game.Workspace.Ignored.Shop["12 [Revolver Ammo] - $82"].ClickDetector)
        wait(0.5)
        humanoid.Parent:SetPrimaryPartCFrame(CFrame.new(originalPosition))
    end
end)

AutoBuySectionRight:Button("[Rifle Ammo]", function(LMGAutoBuy)
    local humanoid = game.Players.LocalPlayer.Character and game.Players.LocalPlayer.Character:FindFirstChild("Humanoid")
    local targetPosition = Vector3.new(-255.258, 49.363, -213.482)
    local originalPosition = humanoid.Parent.HumanoidRootPart.Position

    if humanoid and humanoid.Parent then
        humanoid.Parent:SetPrimaryPartCFrame(CFrame.new(targetPosition))
        wait(0.4)
        fireclickdetector(game.Workspace.Ignored.Shop["5 [Rifle Ammo] - $273"].ClickDetector)
        wait(0.5)
        humanoid.Parent:SetPrimaryPartCFrame(CFrame.new(originalPosition))
    end
end)


local FlyKey = Enum.KeyCode.V
local SpeedKey = Enum.KeyCode.LeftShift

local SpeedKeyMultiplier = 3
local FlightSpeed = 256
local FlightAcceleration = 10
local TurnSpeed = 100

local UserInputService = game:GetService("UserInputService")
local StarterGui = game:GetService("StarterGui")
local RunService = game:GetService("RunService")
local Players = game:GetService("Players")
local User = Players.LocalPlayer
local Camera = workspace.CurrentCamera
local UserCharacter = nil
local UserRootPart = nil
local Connection = nil
local FlightEnabled = false
local InputConnection = nil

workspace.Changed:Connect(function()
    Camera = workspace.CurrentCamera
end)

local setCharacter = function(c)
    UserCharacter = c
    UserRootPart = c:WaitForChild("HumanoidRootPart")
end

User.CharacterAdded:Connect(setCharacter)
if User.Character then
    setCharacter(User.Character)
end

local CurrentVelocity = Vector3.new(0,0,0)

local Flight = function(delta)
    local BaseVelocity = Vector3.new(0,0,0)
    if not UserInputService:GetFocusedTextBox() then
        if UserInputService:IsKeyDown(Enum.KeyCode.W) then
            BaseVelocity = BaseVelocity + (Camera.CFrame.LookVector * FlightSpeed)
        end
        if UserInputService:IsKeyDown(Enum.KeyCode.A) then
            BaseVelocity = BaseVelocity - (Camera.CFrame.RightVector * FlightSpeed)
        end
        if UserInputService:IsKeyDown(Enum.KeyCode.S) then
            BaseVelocity = BaseVelocity - (Camera.CFrame.LookVector * FlightSpeed)
        end
        if UserInputService:IsKeyDown(Enum.KeyCode.D) then
            BaseVelocity = BaseVelocity + (Camera.CFrame.RightVector * FlightSpeed)
        end
        if UserInputService:IsKeyDown(Enum.KeyCode.Space) then
            BaseVelocity = BaseVelocity + (Camera.CFrame.UpVector * FlightSpeed)
        end
        if UserInputService:IsKeyDown(SpeedKey) then
            BaseVelocity = BaseVelocity * SpeedKeyMultiplier
        end
    end
    if UserRootPart then
        local car = UserRootPart:GetRootPart()
        if car.Anchored then return end
        if not isnetworkowner(car) then return end
        CurrentVelocity = CurrentVelocity:Lerp(
            BaseVelocity,
            math.clamp(delta * FlightAcceleration, 0, 1)
        )
        car.Velocity = CurrentVelocity + Vector3.new(0, 2, 0)
        if car ~= UserRootPart then
            car.RotVelocity = Vector3.new(0,0,0)
            car.CFrame = car.CFrame:Lerp(CFrame.lookAt(
                car.Position,
                car.Position + CurrentVelocity + Camera.CFrame.LookVector
            ), math.clamp(delta * TurnSpeed, 0, 1))
        end
    end
end

MainSectionRight:Toggle("Flight ┃ Keybind: V", function(FlightToggle)
    FlightEnabled = FlightToggle
    if FlightEnabled then
        if not InputConnection then
            InputConnection = UserInputService.InputBegan:Connect(function(userInput, gameProcessed)
                if gameProcessed then return end
                if userInput.KeyCode == FlyKey then
                    if Connection then
                        Connection:Disconnect()
                        Connection = nil
                    else
                        CurrentVelocity = UserRootPart.Velocity
                        Connection = RunService.Heartbeat:Connect(Flight)
                    end
                end
            end)
        end
    else
        if InputConnection then
            InputConnection:Disconnect()
            InputConnection = nil
        end
        if Connection then
            Connection:Disconnect()
            Connection = nil
        end
    end
end)

TeleportsSectionLeft:Button("Bank", function(f)
	local targetPosition = Vector3.new(-480, 23, -285)

local function teleportPlayer()
    local player = game.Players.LocalPlayer
    if player and player.Character then
        player.Character:SetPrimaryPartCFrame(CFrame.new(targetPosition))
    end
end

teleportPlayer()

end)

TeleportsSectionLeft:Button("School", function(f)
	local targetPosition = Vector3.new(-532, 21, 336)

local function teleportPlayer()
    local player = game.Players.LocalPlayer
    if player and player.Character then
        player.Character:SetPrimaryPartCFrame(CFrame.new(targetPosition))
    end
end

teleportPlayer()

end)

TeleportsSectionLeft:Button("HairSalon", function(f)
	local targetPosition = Vector3.new(-858, 22, -652)

local function teleportPlayer()
    local player = game.Players.LocalPlayer
    if player and player.Character then
        player.Character:SetPrimaryPartCFrame(CFrame.new(targetPosition))
    end
end

teleportPlayer()

end)

TeleportsSectionLeft:Button("Gym", function(f)
	local targetPosition = Vector3.new(-79, 22, -632)

local function teleportPlayer()
    local player = game.Players.LocalPlayer
    if player and player.Character then
        player.Character:SetPrimaryPartCFrame(CFrame.new(targetPosition))
    end
end

teleportPlayer()

end)

TeleportsSectionLeft:Button("HoodKicks", function(f)
	local targetPosition = Vector3.new(-240, 21, -413)

local function teleportPlayer()
    local player = game.Players.LocalPlayer
    if player and player.Character then
        player.Character:SetPrimaryPartCFrame(CFrame.new(targetPosition))
    end
end

teleportPlayer()

end)

TeleportsSectionLeft:Button("UpHill", function(f)
	local targetPosition = Vector3.new(481, 47, -572)

local function teleportPlayer()
    local player = game.Players.LocalPlayer
    if player and player.Character then
        player.Character:SetPrimaryPartCFrame(CFrame.new(targetPosition))
    end
end

teleportPlayer()

end)

TeleportsSectionLeft:Button("DownHill", function(f)
	local targetPosition = Vector3.new(-535, 7, -735)

local function teleportPlayer()
    local player = game.Players.LocalPlayer
    if player and player.Character then
        player.Character:SetPrimaryPartCFrame(CFrame.new(targetPosition))
    end
end

teleportPlayer()

end)

TeleportsSectionLeft:Button("UpHillFood", function(f)
	local targetPosition = Vector3.new(588, 51, -480)

local function teleportPlayer()
    local player = game.Players.LocalPlayer
    if player and player.Character then
        player.Character:SetPrimaryPartCFrame(CFrame.new(targetPosition))
    end
end

teleportPlayer()

end)

TeleportsSectionLeft:Button("Food", function(f)
	local targetPosition = Vector3.new(-335, 23, -295)

local function teleportPlayer()
    local player = game.Players.LocalPlayer
    if player and player.Character then
        player.Character:SetPrimaryPartCFrame(CFrame.new(targetPosition))
    end
end

teleportPlayer()

end)

TeleportsSectionLeft:Button("Park", function(f)
	local targetPosition = Vector3.new(-262, 22, -761)

local function teleportPlayer()
    local player = game.Players.LocalPlayer
    if player and player.Character then
        player.Character:SetPrimaryPartCFrame(CFrame.new(targetPosition))
    end
end

teleportPlayer()

end)

TeleportsSectionLeft:Button("GasStation", function(f)
	local targetPosition = Vector3.new(592, 48, -257)

local function teleportPlayer()
    local player = game.Players.LocalPlayer
    if player and player.Character then
        player.Character:SetPrimaryPartCFrame(CFrame.new(targetPosition))
    end
end

teleportPlayer()

end)

TeleportsSectionLeft:Button("Military", function(f)
	local targetPosition = Vector3.new(38, 25, -875)

local function teleportPlayer()
    local player = game.Players.LocalPlayer
    if player and player.Character then
        player.Character:SetPrimaryPartCFrame(CFrame.new(targetPosition))
    end
end

teleportPlayer()

end)

TeleportsSectionRight:Button("Revolver", function(f)
	local targetPosition = Vector3.new(-635, 21, -131)

local function teleportPlayer()
    local player = game.Players.LocalPlayer
    if player and player.Character then
        player.Character:SetPrimaryPartCFrame(CFrame.new(targetPosition))
    end
end

teleportPlayer()

end)

TeleportsSectionRight:Button("LMG", function(f)
	local targetPosition = Vector3.new(-618, 23, -296)

local function teleportPlayer()
    local player = game.Players.LocalPlayer
    if player and player.Character then
        player.Character:SetPrimaryPartCFrame(CFrame.new(targetPosition))
    end
end

teleportPlayer()

end)

TeleportsSectionRight:Button("AUG, Rifle", function(f)
	local targetPosition = Vector3.new(-266, 52, -226)

local function teleportPlayer()
    local player = game.Players.LocalPlayer
    if player and player.Character then
        player.Character:SetPrimaryPartCFrame(CFrame.new(targetPosition))
    end
end

teleportPlayer()

end)
		
TeleportsSectionLeft:Button("Police Station", function(f)
	local targetPosition = Vector3.new(-263, 21, -97)

local function teleportPlayer()
    local player = game.Players.LocalPlayer
    if player and player.Character then
        player.Character:SetPrimaryPartCFrame(CFrame.new(targetPosition))
    end
end

teleportPlayer()

end)

TeleportsSectionRight:Button("Tactical Shotgun", function(f)
	local targetPosition = Vector3.new(471, 48, -625)

local function teleportPlayer()
    local player = game.Players.LocalPlayer
    if player and player.Character then
        player.Character:SetPrimaryPartCFrame(CFrame.new(targetPosition))
    end
end

teleportPlayer()

end)

TeleportsSectionRight:Button("Double Barrel", function(f)
	local targetPosition = Vector3.new(-1043, 21, -263)

local function teleportPlayer()
    local player = game.Players.LocalPlayer
    if player and player.Character then
        player.Character:SetPrimaryPartCFrame(CFrame.new(targetPosition))
    end
end

teleportPlayer()

end)

TeleportsSectionLeft:Button("Arcade", function(f)
	local targetPosition = Vector3.new(-221, 22, -290)

local function teleportPlayer()
    local player = game.Players.LocalPlayer
    if player and player.Character then
        player.Character:SetPrimaryPartCFrame(CFrame.new(targetPosition))
    end
end

teleportPlayer()

end)

TeleportsSectionLeft:Button("Phone Shop", function(f)
	local targetPosition = Vector3.new(-135, 21, -985)

local function teleportPlayer()
    local player = game.Players.LocalPlayer
    if player and player.Character then
        player.Character:SetPrimaryPartCFrame(CFrame.new(targetPosition))
    end
end

teleportPlayer()

end)

TeleportsSectionLeft:Button("High Medium Armor", function(f)
	local targetPosition = Vector3.new(-933, -28, 563)

local function teleportPlayer()
    local player = game.Players.LocalPlayer
    if player and player.Character then
        player.Character:SetPrimaryPartCFrame(CFrame.new(targetPosition))
    end
end

teleportPlayer()

end)

TeleportsSectionLeft:Button("Safe 1", function(f)
	local targetPosition = Vector3.new(196, -7, 341)

local function teleportPlayer()
    local player = game.Players.LocalPlayer
    if player and player.Character then
        player.Character:SetPrimaryPartCFrame(CFrame.new(targetPosition))
    end
end

teleportPlayer()

end)

local Player = game:GetService("Players").LocalPlayer
local Mouse = Player:GetMouse()
local Camera = game:GetService("Workspace").CurrentCamera
local Circle = nil
local connection = nil
local CircleEnabled = false

local function CreateCircle()
    local circle = Drawing.new("Circle")
    circle.Visible = false
    circle.Color = Color3.fromRGB(255, 255, 255)
    circle.Thickness = 1
    circle.Filled = false
    return circle
end

local function UpdateCirclePosition()
    if not CircleEnabled then return end

    if connection then return end

    connection = game:GetService("RunService").RenderStepped:Connect(function()
        if not CircleEnabled then
            if Circle then
                Circle.Visible = false
            end
            if connection then
                connection:Disconnect()
                connection = nil
            end
            return
        end

        if not Circle then
            Circle = CreateCircle()
        end

        local mousePosition = Mouse.Hit.p
        local screenPosition, visible = Camera:WorldToViewportPoint(mousePosition)

        if visible then
            Circle.Position = Vector2.new(screenPosition.X, screenPosition.Y)
            Circle.Radius = 250
            Circle.Visible = true
        else
            Circle.Visible = false
        end
    end)
end

MainSectionRight:Toggle("FOV Circle", function(f)
    if f then
        CircleEnabled = true
        if not Circle then
            Circle = CreateCircle()
        end
        Circle.Visible = true
        UpdateCirclePosition()
    else
        CircleEnabled = false
        if Circle then
            Circle.Visible = false
        end
        if connection then
            connection:Disconnect()
            connection = nil
        end
    end
end)

Circle = CreateCircle()

MainSectionRight:Toggle("FOV Filled", function(f)
    if f then
        Circle.Filled = true
    else
        Circle.Filled = false
    end
end)

MiscSectionRight:Button("Force Reset", function(ForceReset)
    game.Players.LocalPlayer.Character:WaitForChild("Humanoid").Health = 0
end)

MiscSectionRight:Button("Animation Pack", function(AnimationPack)
    loadstring(game:HttpGet(('https://raw.githubusercontent.com/Rafapapolas/DahoodScripts/refs/heads/main/Animation%20Pack.lua'),true))()
end)

MiscSectionRight:Button("Play Loading Screen", function(PlayLoadingScreen)
        local playerGui = game.Players.LocalPlayer:WaitForChild("PlayerGui")

        local screenGui = Instance.new("ScreenGui")
        screenGui.Name = "IntroScreen"
        screenGui.Parent = playerGui

        local frame = Instance.new("Frame")
        frame.Name = "IntroFrame"
        frame.Parent = screenGui
        frame.Size = UDim2.new(1, 0, 1, 0)
        frame.BackgroundTransparency = 1

        local imageLabel = Instance.new("ImageLabel")
        imageLabel.Name = "IntroImage"
        imageLabel.Parent = frame
        imageLabel.Size = UDim2.new(0.01, 0, 0.01, 0)  
        imageLabel.Position = UDim2.new(0.5, -0.1, 0.5, -0.1) 
        imageLabel.Image = "rbxassetid://97813871248839"
        imageLabel.BackgroundTransparency = 1
        imageLabel.ImageTransparency = 100
        imageLabel.AnchorPoint = Vector2.new(0.5, 0.5)

        local sound = Instance.new("Sound")
        sound.Name = "IntroSound"
        sound.Parent = frame
        sound.SoundId = "rbxassetid://1"
        sound.Volume = 0
        sound:Play()

        local tweenService = game:GetService("TweenService")

        local blurEffect = Instance.new("BlurEffect")
        blurEffect.Parent = game.Lighting
        blurEffect.Size = 60

        local zoomTweenInfo = TweenInfo.new(0.4, Enum.EasingStyle.Quad, Enum.EasingDirection.Out)  
        local blurTweenInfo = TweenInfo.new(4, Enum.EasingStyle.Quad, Enum.EasingDirection.Out)  

        local fadeIn = tweenService:Create(imageLabel, zoomTweenInfo, {ImageTransparency = 0.5})
        local fadeOut = tweenService:Create(imageLabel, zoomTweenInfo, {ImageTransparency = 1})
        local blurTween = tweenService:Create(blurEffect, blurTweenInfo, {Size = 0})  
        local zoomTween = tweenService:Create(imageLabel, zoomTweenInfo, {Size = UDim2.new(0.35, 0, 0.35, 0)})

        fadeIn:Play()
        fadeIn.Completed:Wait()

        zoomTween:Play()
        blurTween:Play()

        wait(3)  

        fadeOut:Play()
        fadeOut.Completed:Wait()

        blurTween:Play()
        blurTween.Completed:Wait()

        blurEffect:Destroy()
        screenGui:Destroy()
end)

MiscSectionLeft:Toggle("Infinite Zoom", function(InfZoom)
    if InfZoom then
        game.Players.LocalPlayer.CameraMaxZoomDistance = 100000
    else
        game.Players.LocalPlayer.CameraMaxZoomDistance = 35
    end    
end)

local Player = game:GetService'Players'.LocalPlayer
local UIS = game:GetService'UserInputService'

_G.JumpHeight = 50
local InfiniteJump = false

local function ToggleInfiniteJump(state)
    InfiniteJump = state
end

local function InfiniteJumpFunction()
    UIS.InputBegan:Connect(function(UserInput)
        if InfiniteJump then
            if UserInput.UserInputType == Enum.UserInputType.Keyboard and UserInput.KeyCode == Enum.KeyCode.Space then
                Action(Player.Character.Humanoid, function(self)
                    if self:GetState() == Enum.HumanoidStateType.Jumping or self:GetState() == Enum.HumanoidStateType.Freefall then
                        Action(self.Parent.HumanoidRootPart, function(self)
                            self.Velocity = Vector3.new(0, _G.JumpHeight, 0)
                        end)
                    end
                end)
            end
        end
    end)
end

MiscSectionLeft:Toggle("Infinite Jump", function(state)
    ToggleInfiniteJump(state)
    if InfiniteJump then
        InfiniteJumpFunction()
    end
end)

function Action(Object, Function)
    if Object ~= nil then
        Function(Object)
    end
end


local Plr = game:GetService("Players").LocalPlayer
local Mouse = Plr:GetMouse()

local CTRLCLICKTP = false

local function ToggleCTRLClickTP(state)
    CTRLCLICKTP = state
end

local function CTRLClickTPFunction()
    Mouse.Button1Down:Connect(function()
        if CTRLCLICKTP then
            if not game:GetService("UserInputService"):IsKeyDown(Enum.KeyCode.LeftControl) then return end
            if not Mouse.Target then return end
            Plr.Character:MoveTo(Mouse.Hit.p)
        end
    end)
end

MiscSectionLeft:Toggle("CTRL Click TP", function(state)
    ToggleCTRLClickTP(state)
    if CTRLCLICKTP then
        CTRLClickTPFunction()
    end
end)


MiscSectionLeft:Toggle("Chat Logs", function(ChatLogsToggled)
    if ChatLogsToggled == true then
    	game.Players.LocalPlayer.PlayerGui.Chat.Frame.ChatBarParentFrame.Position = game.Players.LocalPlayer.PlayerGui.Chat.Frame.ChatChannelParentFrame.Position + UDim2.new(UDim.new(),game.Players.LocalPlayer.PlayerGui.Chat.Frame.ChatChannelParentFrame.Size.Y)
    	game.Players.LocalPlayer.PlayerGui.Chat.Frame.ChatChannelParentFrame.Visible = true
    	else
        game.Players.LocalPlayer.PlayerGui.Chat.Frame.ChatChannelParentFrame.Visible = false
    end
end)

local RunService = game:GetService("RunService")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local RATE_PER_SECOND = 2

local autoStompEnabled = false

MiscSectionLeft:Toggle("AutoStomp", function(AStomp)
    autoStompEnabled = AStomp
end)

RunService.Stepped:Connect(function(time, step)
    if autoStompEnabled then
        ReplicatedStorage.MainEvent:FireServer("Stomp")
    end
end)



MiscSectionLeft:Toggle("Streched Resolution [BUGGY]", function(StrechedRes)
    if StrechedRes then
        getgenv().Resolution = {
            [".gg/scripters"] = 0.7
        }
        
        local Camera = workspace.CurrentCamera
        if getgenv().gg_scripters == nil then
            game:GetService("RunService").RenderStepped:Connect(
                function()
                    Camera.CFrame = Camera.CFrame * CFrame.new(0, 0, 0, 1, 0, 0, 0, getgenv().Resolution[".gg/scripters"], 0, 0, 0, 1)
                end
            )
        end
        getgenv().gg_scripters = "Aori0001"
    else
        getgenv().Resolution = {
            [".gg/scripters"] = 1
        }
        
        local Camera = workspace.CurrentCamera
        if getgenv().gg_scripters == nil then
            game:GetService("RunService").RenderStepped:Connect(
                function()
                    Camera.CFrame = Camera.CFrame * CFrame.new(0, 0, 0, 1, 0, 0, 0, getgenv().Resolution[".gg/scripters"], 0, 0, 0, 1)
                end
            )
        end
        getgenv().gg_scripters = "Aori0001"
    end
end)

local Settings = {
    Box_Color = Color3.fromRGB(255, 0, 0),
    Box_Thickness = 1
}
local Team_Check = {
    TeamCheck = false,
    Green = Color3.fromRGB(0, 255, 0),
    Red = Color3.fromRGB(255, 0, 0)
}
local TeamColor = true

local player = game:GetService("Players").LocalPlayer
local camera = game:GetService("Workspace").CurrentCamera
local mouse = player:GetMouse()

local function NewQuad(thickness, color)
    local quad = Drawing.new("Quad")
    quad.Visible = false
    quad.PointA = Vector2.new(0,0)
    quad.PointB = Vector2.new(0,0)
    quad.PointC = Vector2.new(0,0)
    quad.PointD = Vector2.new(0,0)
    quad.Color = color
    quad.Filled = false
    quad.Thickness = thickness
    quad.Transparency = 1
    return quad
end

local function Visibility(state, lib)
    for u, x in pairs(lib) do
        x.Visible = state
    end
end

local black = Color3.fromRGB(0, 0 ,0)

local library = {}
local connections = {}

local function ESP(plr)
    library[plr] = {
        black = NewQuad(Settings.Box_Thickness*2, black),
        box = NewQuad(Settings.Box_Thickness, Settings.Box_Color)
    }

    local connection
    connection = game:GetService("RunService").RenderStepped:Connect(function()
        if plr.Character ~= nil and plr.Character:FindFirstChild("Humanoid") ~= nil and plr.Character:FindFirstChild("HumanoidRootPart") ~= nil and plr.Character.Humanoid.Health > 0 and plr.Character:FindFirstChild("Head") ~= nil then
            local HumPos, OnScreen = camera:WorldToViewportPoint(plr.Character.HumanoidRootPart.Position)
            if OnScreen then
                local head = camera:WorldToViewportPoint(plr.Character.Head.Position)
                local DistanceY = math.clamp((Vector2.new(head.X, head.Y) - Vector2.new(HumPos.X, HumPos.Y)).magnitude, 2, math.huge)
                
                local function Size(item)
                    item.PointA = Vector2.new(HumPos.X + DistanceY, HumPos.Y - DistanceY*2)
                    item.PointB = Vector2.new(HumPos.X - DistanceY, HumPos.Y - DistanceY*2)
                    item.PointC = Vector2.new(HumPos.X - DistanceY, HumPos.Y + DistanceY*2)
                    item.PointD = Vector2.new(HumPos.X + DistanceY, HumPos.Y + DistanceY*2)
                end
                Size(library[plr].box)
                Size(library[plr].black)

                if Team_Check.TeamCheck then
                    if plr.TeamColor == player.TeamColor then
                        library[plr].box.Color = Team_Check.Green
                    else 
                        library[plr].box.Color = Team_Check.Red
                    end
                else 
                    library[plr].box.Color = Settings.Box_Color
                end
                if TeamColor == true then
                    library[plr].box.Color = plr.TeamColor.Color
                end
                Visibility(true, {library[plr].box, library[plr].black})
            else 
                Visibility(false, {library[plr].box, library[plr].black})
            end
        else 
            Visibility(false, {library[plr].box, library[plr].black})
            if game.Players:FindFirstChild(plr.Name) == nil then
                connection:Disconnect()
                connections[plr] = nil
            end
        end
    end)
    
    connections[plr] = connection
end

local function RemoveESP(plr)
    Visibility(false, {library[plr].box, library[plr].black})
    connections[plr]:Disconnect()
    connections[plr] = nil
    library[plr] = nil
end

local playerAddedConnection

MainSectionRight:Toggle("Box ESP", function(BoxESP)
    if BoxESP then
        playerAddedConnection = game.Players.PlayerAdded:Connect(function(newplr)
            if newplr.Name ~= player.Name and not library[newplr] then
                coroutine.wrap(ESP)(newplr)
            end
        end)

        for i, v in pairs(game:GetService("Players"):GetPlayers()) do
            if v.Name ~= player.Name and not library[v] then
                coroutine.wrap(ESP)(v)
            end
        end

        for i, v in pairs(library) do
            Visibility(true, {v.box, v.black})
        end
    else
        for i, v in pairs(library) do
            Visibility(false, {v.box, v.black})
        end
        for plr, connection in pairs(connections) do
            connection:Disconnect()
        end
        connections = {}
        library = {}

        if playerAddedConnection then
            playerAddedConnection:Disconnect()
            playerAddedConnection = nil
        end
    end
end)
  
local Settings = {
    Tracer_Color = Color3.fromRGB(255, 0, 0),
    Tracer_Thickness = 1,
    Tracer_Origin = "Middle",
    Tracer_FollowMouse = false,
    Tracers = false
}
local Team_Check = {
    TeamCheck = false,
    Green = Color3.fromRGB(0, 255, 0),
    Red = Color3.fromRGB(255, 0, 0)
}
local TeamColor = true

local player = game:GetService("Players").LocalPlayer
local camera = game:GetService("Workspace").CurrentCamera
local mouse = player:GetMouse()

local function NewLine(thickness, color)
    local line = Drawing.new("Line")
    line.Visible = false
    line.From = Vector2.new(0, 0)
    line.To = Vector2.new(0, 0)
    line.Color = color
    line.Thickness = thickness
    line.Transparency = 1
    return line
end

local function Visibility(state, lib)
    for u, x in pairs(lib) do
        x.Visible = state
    end
end

local function TracerESP(plr)
    local library = {
        blacktracer = NewLine(Settings.Tracer_Thickness * 2, Color3.fromRGB(0, 0, 0)),
        tracer = NewLine(Settings.Tracer_Thickness, Settings.Tracer_Color)
    }

    local function Updater()
        local connection
        connection = game:GetService("RunService").RenderStepped:Connect(function()
            if Settings.Tracers then
                if plr.Character ~= nil and plr.Character:FindFirstChild("Humanoid") ~= nil and plr.Character:FindFirstChild("HumanoidRootPart") ~= nil and plr.Character.Humanoid.Health > 0 and plr.Character:FindFirstChild("Head") ~= nil then
                    local HumPos, OnScreen = camera:WorldToViewportPoint(plr.Character.HumanoidRootPart.Position)
                    if OnScreen then
                        local head = camera:WorldToViewportPoint(plr.Character.Head.Position)
                        local DistanceY = math.clamp((Vector2.new(head.X, head.Y) - Vector2.new(HumPos.X, HumPos.Y)).magnitude, 2, math.huge)

                        if Settings.Tracer_Origin == "Middle" then
                            library.tracer.From = camera.ViewportSize * 0.5
                            library.blacktracer.From = camera.ViewportSize * 0.5
                        elseif Settings.Tracer_Origin == "Bottom" then
                            library.tracer.From = Vector2.new(camera.ViewportSize.X * 0.5, camera.ViewportSize.Y)
                            library.blacktracer.From = Vector2.new(camera.ViewportSize.X * 0.5, camera.ViewportSize.Y)
                        end

                        if Settings.Tracer_FollowMouse then
                            library.tracer.From = Vector2.new(mouse.X, mouse.Y + 36)
                            library.blacktracer.From = Vector2.new(mouse.X, mouse.Y + 36)
                        end

                        library.tracer.To = Vector2.new(HumPos.X, HumPos.Y + DistanceY * 2)
                        library.blacktracer.To = Vector2.new(HumPos.X, HumPos.Y + DistanceY * 2)

                        if Team_Check.TeamCheck then
                            if plr.TeamColor == player.TeamColor then
                                library.tracer.Color = Team_Check.Green
                            else
                                library.tracer.Color = Team_Check.Red
                            end
                        else
                            library.tracer.Color = Settings.Tracer_Color
                        end

                        if TeamColor == true then
                            library.tracer.Color = plr.TeamColor.Color
                        end

                        Visibility(true, {library.tracer, library.blacktracer})
                    else
                        Visibility(false, {library.tracer, library.blacktracer})
                    end
                else
                    Visibility(false, {library.tracer, library.blacktracer})
                    if game.Players:FindFirstChild(plr.Name) == nil then
                        connection:Disconnect()
                    end
                end
            else
                Visibility(false, {library.tracer, library.blacktracer})
            end
        end)
    end
    coroutine.wrap(Updater)()
end

for i, v in pairs(game:GetService("Players"):GetPlayers()) do
    if v.Name ~= player.Name then
        coroutine.wrap(TracerESP)(v)
    end
end

game.Players.PlayerAdded:Connect(function(newplr)
    if newplr.Name ~= player.Name then
        coroutine.wrap(TracerESP)(newplr)
    end
end)

MainSectionRight:Toggle("Tracer ESP", function(state)
    Settings.Tracers = state
end)

local run = game:GetService('RunService')
local originalProperties = {}
local GunChamsEnabled = false

local function getGun()
    local character = game:GetService('Players').LocalPlayer.Character
    if character then
        for _, v in pairs(character:GetChildren()) do
            if v and v:FindFirstChild('Default') then
                return v
            end
        end
    end
    return nil
end

local function color(v)
    if not originalProperties[v] then
        originalProperties[v] = {Color = v.Color, Material = v.Material}
    end
    v.Color = Color3.fromRGB(164, 140, 165)
    v.Material = Enum.Material.ForceField
end

local function restore(v)
    if originalProperties[v] then
        v.Color = originalProperties[v].Color
        v.Material = originalProperties[v].Material
        originalProperties[v] = nil
    end
end

if MainSectionRight then
    MainSectionRight:Toggle("GunChams", function(GunChams)
        GunChamsEnabled = GunChams
    end)
end

local connection
connection = run.Stepped:Connect(function()
    local gun = getGun()
    if gun then
        for _, part in pairs(gun:GetChildren()) do
            if part:IsA("BasePart") then
                if GunChamsEnabled then
                    color(part)
                else
                    restore(part)
                end
            end
        end
    end
end)

game:GetService('Players').LocalPlayer.CharacterAdded:Connect(function()
    connection = run.Stepped:Connect(function()
        local gun = getGun()
        if gun then
            for _, part in pairs(gun:GetChildren()) do
                if part:IsA("BasePart") then
                    if GunChamsEnabled then
                        color(part)
                    else
                        restore(part)
                    end
                end
            end
        end
    end)
end)

game:GetService('Players').LocalPlayer.Character.Humanoid.Died:Connect(function()
    connection:Disconnect()
    originalProperties = {}
end)


MiscSectionLeft:Toggle("AutoReload", function(AReload)
    _G.AutoReload = AReload
end)

_G.AutoReload = false

while true do
    if _G.AutoReload then
        if game:GetService("Players").LocalPlayer.Character:FindFirstChildWhichIsA("Tool") then
            local tool = game:GetService("Players").LocalPlayer.Character:FindFirstChildWhichIsA("Tool")
            if tool:FindFirstChild("Ammo") then
                if tool.Ammo.Value <= 0 then
                    game:GetService("ReplicatedStorage").MainEvent:FireServer("Reload", tool)
                    wait(1)
                end
            end
        end
    end
    wait(0.1)
end

return magic
