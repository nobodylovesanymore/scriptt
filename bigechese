local player = game.Players.LocalPlayer
local ReplicatedStorage = game:GetService('ReplicatedStorage')
local lastKnownPosition = nil
local wantedBeforeStomp = nil
local isStomping = false
local isKilling = false
local isGrabbing = false
local stopAllActions = false
local runService = game:GetService('RunService')
local players = game:GetService('Players')

local commands = {}

local ScreenGui = Instance.new('ScreenGui')
local TargetHUD = Instance.new('Frame')
local ImageTH = Instance.new('Frame')
local UICorner = Instance.new('UICorner')
local ImageLabel = Instance.new('ImageLabel')
local UICorner_2 = Instance.new('UICorner')
local UICorner_3 = Instance.new('UICorner')
local username = Instance.new('TextLabel')
local desc = Instance.new('TextLabel')
local DropShadowHolder = Instance.new('Frame')
local DropShadow = Instance.new('ImageLabel')
local BarHolder = Instance.new('Frame')
local UICorner_4 = Instance.new('UICorner')
local Bar = Instance.new('Frame')
local UICorner_5 = Instance.new('UICorner')

ScreenGui.Parent = player.PlayerGui;
ScreenGui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling

TargetHUD.Parent = ScreenGui
TargetHUD.BackgroundColor3 = Color3.new(0.203922, 0.203922, 0.203922)
TargetHUD.BorderColor3 = Color3.new(0, 0, 0)
TargetHUD.BorderSizePixel = 0
TargetHUD.Position = UDim2.new(0.479964763, 0, 0.551903129, 0)
TargetHUD.Size = UDim2.new(0, 341, 0, 115)
TargetHUD.Visible = false

ImageTH.Parent = TargetHUD
ImageTH.BackgroundColor3 = Color3.new(0.176471, 0.176471, 0.176471)
ImageTH.BorderColor3 = Color3.new(0, 0, 0)
ImageTH.BorderSizePixel = 0
ImageTH.Position = UDim2.new(0.0604652874, 0, 0.170694634, 0)
ImageTH.Size = UDim2.new(0, 75, 0, 75)

UICorner.Parent = ImageTH

ImageLabel.Parent = ImageTH
ImageLabel.BackgroundColor3 = Color3.new(1, 1, 1)
ImageLabel.BackgroundTransparency = 1
ImageLabel.BorderColor3 = Color3.new(0, 0, 0)
ImageLabel.BorderSizePixel = 0
ImageLabel.Size = UDim2.new(0, 75, 0, 75)
ImageLabel.Image = 'rbxasset://textures/ui/GuiImagePlaceholder.png'

UICorner_2.Parent = ImageLabel

UICorner_3.Parent = TargetHUD

username.Parent = TargetHUD
username.BackgroundColor3 = Color3.new(1, 1, 1)
username.BackgroundTransparency = 1
username.BorderColor3 = Color3.new(0, 0, 0)
username.BorderSizePixel = 0
username.Position = UDim2.new(0.332534194, 0, 0.200000003, 0)
username.Size = UDim2.new(0, 200, 0, 33)
username.Font = Enum.Font.GothamSemibold
username.Text = 'outer'
username.TextColor3 = Color3.new(1, 1, 1)
username.TextSize = 24
username.TextXAlignment = Enum.TextXAlignment.Left
username.TextYAlignment = Enum.TextYAlignment.Top

desc.Parent = TargetHUD
desc.BackgroundColor3 = Color3.new(1, 1, 1)
desc.BackgroundTransparency = 1
desc.BorderColor3 = Color3.new(0, 0, 0)
desc.BorderSizePixel = 0
desc.Position = UDim2.new(0.329601645, 0, 0.421999991, 0)
desc.Size = UDim2.new(0, 200, 0, 15)
desc.Font = Enum.Font.GothamMedium
desc.Text = 'Health: 20 (Winning)'
desc.TextColor3 = Color3.new(0.298039, 0.298039, 0.298039)
desc.TextSize = 15
desc.TextXAlignment = Enum.TextXAlignment.Left
desc.TextYAlignment = Enum.TextYAlignment.Top

DropShadowHolder.Parent = TargetHUD
DropShadowHolder.BackgroundTransparency = 1
DropShadowHolder.BorderSizePixel = 0
DropShadowHolder.Size = UDim2.new(1, 0, 1, 0)
DropShadowHolder.ZIndex = 0

DropShadow.Parent = DropShadowHolder
DropShadow.AnchorPoint = Vector2.new(0.5, 0.5)
DropShadow.BackgroundTransparency = 1
DropShadow.BorderSizePixel = 0
DropShadow.Position = UDim2.new(0.5, 0, 0.5, 0)
DropShadow.Size = UDim2.new(1, 47, 1, 47)
DropShadow.ZIndex = 0
DropShadow.Image = 'rbxassetid://6014261993'
DropShadow.ImageColor3 = Color3.new(0, 0, 0)
DropShadow.ImageTransparency = 0.5
DropShadow.ScaleType = Enum.ScaleType.Slice
DropShadow.SliceCenter = Rect.new(49, 49, 450, 450)

BarHolder.Parent = TargetHUD
BarHolder.BackgroundColor3 = Color3.new(0, 0, 0)
BarHolder.BackgroundTransparency = 0.6
BarHolder.BorderColor3 = Color3.new(0, 0, 0)
BarHolder.BorderSizePixel = 0
BarHolder.Position = UDim2.new(0.332533836, 0, 0.689999998, 0)
BarHolder.Size = UDim2.new(0, 200, 0, 13)

UICorner_4.Parent = BarHolder
UICorner_4.CornerRadius = UDim.new(0, 6)

Bar.Parent = BarHolder
Bar.BackgroundColor3 = Color3.new(0.14902, 0.886275, 1)
Bar.BorderColor3 = Color3.new(0, 0, 0)
Bar.BorderSizePixel = 0
Bar.Size = UDim2.new(0, 124, 0, 13)

UICorner_5.Parent = Bar
UICorner_5.CornerRadius = UDim.new(0, 6)

local ts = game:GetService('TweenService')

local targethudd = {}


function targethudd:Show()
    ts:Create(TargetHUD, TweenInfo.new(0.2), {BackgroundTransparency = 0}):Play()

    local children = TargetHUD:GetDescendants()
    for _, child in pairs(children) do
        if child:IsA('GuiObject') and child ~= TargetHUD and child ~= BarHolder and child ~= DropShadowHolder then
            if child:IsA('Frame') then
                ts:Create(child, TweenInfo.new(0.2), {BackgroundTransparency = 0}):Play()
            end
            if child:IsA('TextLabel') then
                ts:Create(child, TweenInfo.new(0.2), {TextTransparency = 0}):Play()
            end

            if child:IsA('ImageLabel') then
                ts:Create(child, TweenInfo.new(0.2), {ImageTransparency = 0}):Play()
            end
        end
    end
    ts:Create(BarHolder, TweenInfo.new(0.2), {BackgroundTransparency = 0.6}):Play()
    task.wait(0.2)
    TargetHUD.Visible = true
end

function targethudd:Update(plr)
    if plr == player then return end
    username.Text = plr.Name
    ImageLabel.Image = 'https://www.roblox.com/headshot-thumbnail/image?userId='..plr.UserId..'&width=420&height=420'
    ts:Create(Bar, TweenInfo.new(0.2), {Size = UDim2.fromOffset(BarHolder.Size.X.Offset * plr.Character.Humanoid.Health / plr.Character.Humanoid.MaxHealth, 13)}):Play()
    desc.Text = `Health: {math.round(plr.Character.Humanoid.Health)} ({player.Character.Humanoid.Health > plr.Character.Humanoid.Health and 'Winning' or 'Losing'})`
end

function targethudd:Hide()
    ts:Create(TargetHUD, TweenInfo.new(0.2), {BackgroundTransparency = 1}):Play()

    local children = TargetHUD:GetDescendants()
    for _, child in pairs(children) do
        if child:IsA('GuiObject') and child ~= TargetHUD and child ~= BarHolder and child ~= DropShadowHolder then
            if child:IsA('Frame') then
                ts:Create(child, TweenInfo.new(0.2), {BackgroundTransparency = 1}):Play()
            end
            if child:IsA('TextLabel') then
                ts:Create(child, TweenInfo.new(0.2), {TextTransparency = 1}):Play()
            end

            if child:IsA('ImageLabel') then
                ts:Create(child, TweenInfo.new(0.2), {ImageTransparency = 1}):Play()
            end
        end
    end
    ts:Create(BarHolder, TweenInfo.new(0.2), {BackgroundTransparency = 1}):Play()
    task.wait(0.2)
    TargetHUD.Visible = false
end

function getWantedValue()
    local stats = player:FindFirstChild('leaderstats')
    local wanted = stats and stats:FindFirstChild('Wanted')
    return wanted and wanted.Value or 0
end

function attemptStomp()
    ReplicatedStorage.MainEvent:FireServer('Stomp')
end

function attemptgrab()
    ReplicatedStorage.MainEvent:FireServer('Grabbing', false)
end

function teleportToPosition(pos)
    local character = player.Character
    local rootPart = character and character:FindFirstChild('HumanoidRootPart')
    if rootPart then
        rootPart.CFrame = CFrame.new(pos)
    end
end

function freezePlayer()
    local character = player.Character
    local humanoid = character and character:FindFirstChild('Humanoid')
    if humanoid then
        humanoid.WalkSpeed = 0
        humanoid.JumpPower = 0
    end
end

function unfreezePlayer()
    local character = player.Character
    local humanoid = character and character:FindFirstChild('Humanoid')
    if humanoid then
        humanoid.WalkSpeed = 16
        humanoid.JumpPower = 50
    end
end

function shootTarget(target)
    local character = player.Character
    local rootPart = character and character:FindFirstChild('HumanoidRootPart')
    local tool = character and character:FindFirstChildOfClass('Tool') or player.Backpack:FindFirstChildOfClass('Tool')

    if tool and tool:FindFirstChild('Handle') and rootPart and target and target.Character then
        local targetHead = target.Character:FindFirstChild('Head')
        if targetHead then
            local direction = (targetHead.Position - rootPart.Position).unit
            targethudd:Update(target)
            ReplicatedStorage:WaitForChild('MainEvent'):FireServer('ShootGun', tool.Handle, rootPart.Position, targetHead.Position, targetHead, direction)
        end
    end
end

function stompKnockedTarget(target)
    local lowerTorso = target.Character and target.Character:FindFirstChild('LowerTorso')
    if not lowerTorso then return end

    wantedBeforeStomp = getWantedValue()
    while getWantedValue() <= wantedBeforeStomp do
        if stopAllActions then break end
        teleportToPosition(lowerTorso.Position + Vector3.new(0, 3, 0))
        attemptStomp()
        task.wait()
    end

    if lastKnownPosition then
        teleportToPosition(lastKnownPosition)
    end
end

function isTargetKnocked(character)
    local bodyEffects = character:FindFirstChild('BodyEffects')
    local koValue = bodyEffects and bodyEffects:FindFirstChild('K.O')
    return koValue and koValue.Value
end

function spamStompUntilConfirmed(target)
    local lowerTorso = target.Character and target.Character:FindFirstChild('LowerTorso')
    if not lowerTorso then return end

    wantedBeforeStomp = getWantedValue()
    while getWantedValue() <= wantedBeforeStomp do
        if stopAllActions then break end
        teleportToPosition(lowerTorso.Position + Vector3.new(0, 3, 0))
        attemptStomp()
        task.wait(0.05)
    end

    if lastKnownPosition then
        teleportToPosition(lastKnownPosition)
    end
end

function fastOrbitTarget(target)
    local character = player.Character
    local rootPart = character and character:FindFirstChild('HumanoidRootPart')
    
    if rootPart and target and target.Character then
        workspace.Camera.CameraSubject = target.Character.Humanoid
        local originalPosition = lastKnownPosition or rootPart.Position
        freezePlayer()

        local orbiting = true
        local angle = 0
        local radius = 5
        local height = 6
        local maxDuration = 10
        local startTime = tick()

        while orbiting and tick() - startTime < maxDuration do
            if stopAllActions then break end
            if isTargetKnocked(target.Character) then
                orbiting = false
                break
            end

            angle = angle + math.rad(50)
            local xOffset = math.cos(angle) * radius
            local zOffset = math.sin(angle) * radius
            local targetRoot = target.Character:FindFirstChild('HumanoidRootPart')

            if targetRoot then
                rootPart.CFrame = CFrame.new(targetRoot.Position + Vector3.new(xOffset, height, zOffset))
                rootPart.CFrame = CFrame.lookAt(rootPart.Position, targetRoot.Position)
                shootTarget(target)
            end

            task.wait()
        end
        
        workspace.Camera.CameraSubject = player.Character.Humanoid
        unfreezePlayer()
    end
end

function spamGrabuntilgrabbed(target)
    local lowerTorso = target.Character and target.Character:FindFirstChild('LowerTorso')
    if not lowerTorso then return end

    while target.Character:FindFirstChild('GRABBING_CONSTRAINT') == nil do
        if stopAllActions then break end
        teleportToPosition(lowerTorso.Position + Vector3.new(0, 3, 0))
        attemptgrab();
        task.wait(0.3)

        if target.Character:FindFirstChild('GRABBING_CONSTRAINT') ~= nil then
            teleportToPosition(lastKnownPosition)
            return
        end
    end

    if lastKnownPosition then
        teleportToPosition(lastKnownPosition)
    end
end

function stompPlayer(targetName)
    local target = nil
    local character = player.Character
    local rootPart = character and character:FindFirstChild('HumanoidRootPart')

    if not isStomping and rootPart then
        lastKnownPosition = rootPart.Position
        isStomping = true
    end

    local lowerTargetName = string.lower(targetName)

    for _, plr in pairs(game.Players:GetPlayers()) do
        local lowerName = string.lower(plr.Name)
        local lowerDisplayName = string.lower(plr.DisplayName)
        if string.find(lowerName, lowerTargetName, 1, true) or 
           string.find(lowerDisplayName, lowerTargetName, 1, true) then
            target = plr
            break
        end
    end

    if not target then
        isStomping = false
        return
    end

    if isTargetKnocked(target.Character) then
        stompKnockedTarget(target)
    else
        fastOrbitTarget(target)
        if isTargetKnocked(target.Character) then
            spamStompUntilConfirmed(target)
        end
    end

    isStomping = false
end


function grabplayer(targetName)
    local target = nil
    local character = player.Character
    local rootPart = character and character:FindFirstChild('HumanoidRootPart')

    if not isGrabbing and rootPart then
        lastKnownPosition = rootPart.Position
        isGrabbing = true
    end

    local lowerTargetName = string.lower(targetName)

    for _, plr in pairs(game.Players:GetPlayers()) do
        local lowerName = string.lower(plr.Name)
        local lowerDisplayName = string.lower(plr.DisplayName)
        if string.find(lowerName, lowerTargetName, 1, true) or 
           string.find(lowerDisplayName, lowerTargetName, 1, true) then
            target = plr
            break
        end
    end

    if not target then
        isGrabbing = false
        return
    end

    if isTargetKnocked(target.Character) then
        attemptgrab(target)
    else
        fastOrbitTarget(target)
        if isTargetKnocked(target.Character) then
            spamGrabuntilgrabbed(target)
        end
    end

    targethudd:Hide()

    isGrabbing = false
end

function killplayer(targetName)
    local target = nil
    local character = player.Character
    local rootPart = character and character:FindFirstChild('HumanoidRootPart')

    if not (isGrabbing or isStomping or isKilling) and rootPart then
        lastKnownPosition = rootPart.Position
        isKilling = true
    end

    local lowerTargetName = string.lower(targetName)

    for _, plr in pairs(game.Players:GetPlayers()) do
        local lowerName = string.lower(plr.Name)
        local lowerDisplayName = string.lower(plr.DisplayName)
        if string.find(lowerName, lowerTargetName, 1, true) or 
           string.find(lowerDisplayName, lowerTargetName, 1, true) then
            target = plr
            break
        end
    end

    if not target then
        isKilling = false
        return
    end

    if not isTargetKnocked(target.Character) then
        fastOrbitTarget(target)
    end

    task.spawn(function()
        while not isTargetKnocked(target.Character) do
            task.wait()
        end

        if lastKnownPosition then
            teleportToPosition(lastKnownPosition)
        end
    end)

    isKilling = false
end

function armself()
    repeat task.wait() until workspace;
    
    local character = player.Character
    local rootPart = character and character:FindFirstChild('HumanoidRootPart')

    if not (isGrabbing or isStomping or isKilling) and rootPart then
        lastKnownPosition = rootPart.Position
    end

    task.wait()

    teleportToPosition(Vector3.new(-275.7, 55.365, -213.394));
    fireclickdetector(workspace.Ignored.Shop['[AUG] - $2131'].ClickDetector)
    
    teleportToPosition(Vector3.new(-278, 55.365, -213.394));
    fireclickdetector(workspace.Ignored.Shop['90 [AUG Ammo] - $87'].ClickDetector)
    fireclickdetector(workspace.Ignored.Shop['90 [AUG Ammo] - $87'].ClickDetector)
    fireclickdetector(workspace.Ignored.Shop['90 [AUG Ammo] - $87'].ClickDetector)

    if lastKnownPosition then
        teleportToPosition(lastKnownPosition)
    end
end

function isGunEquipped()
    local character = player.Character
    if character then
        local tool = character:FindFirstChildOfClass('Tool')
        return tool and tool:FindFirstChild('Handle') ~= nil
    end
    return false
end

runService.Heartbeat:Connect(function()
    player.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.FallingDown, false)
    player.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.Ragdoll, false)
    if (isGrabbing or isStomping or isKilling) then
        targethudd:Show()
    else
        targethudd:Hide()
    end
    --[[if isGunEquipped() then
        local tool = player.Character:FindFirstChildOfClass('Tool')
        if tool:FindFirstChild('Handle') ~= nil then
            ReplicatedStorage.MainEvent:FireServer('Reload', tool)    
        end
    end]]
end)

function killall()
    repeat
        for _, plr in pairs(game.Players:GetPlayers()) do
            killplayer(plr.Name)
        end
        task.wait()
    until (not isKilling) or stopAllActions;
end

game:GetService('Players').LocalPlayer.Chatted:Connect(function(msg)
    local args = string.split(msg, ' ')
    if args[1] == '!stomp' and args[2] then
        stopAllActions = false
        task.spawn(function()
            for _, object in pairs(workspace:GetDescendants()) do
                if object:IsA('Seat') then
                    object:Destroy()
                end
            end
        end)
        stompPlayer(args[2])
    elseif (args[1] == '!grab' or args[1] == '!bring') and args[2] then
        stopAllActions = false
        for _, object in pairs(workspace:GetDescendants()) do
            if object:IsA('Seat') then
                object:Destroy()
            end
        end
        grabplayer(args[2])
    elseif args[1] == '!kill' then
        stopAllActions = false
        task.spawn(function()
            for _, object in pairs(workspace:GetDescendants()) do
                if object:IsA('Seat') then
                    object:Destroy()
                end
            end
        end)
        killplayer(args[2])
    elseif args[1] == '!killall' then
        stopAllActions = false
        task.spawn(function()
            for _, object in pairs(workspace:GetDescendants()) do
                if object:IsA('Seat') then
                    object:Destroy()
                end
            end
        end)
        killplayer()
    elseif args[1] == '!stop' then
        stopAllActions = true
        unfreezePlayer()
        if lastKnownPosition then
            teleportToPosition(lastKnownPosition)
        end
    elseif args[1] == '!arm' then
        stopAllActions = false;
        armself()
    elseif args[1] == '!tp' then
        local lowerTargetName = string.lower(args[2])
        local target

        for _, plr in pairs(game.Players:GetPlayers()) do
            local lowerName = string.lower(plr.Name)
            local lowerDisplayName = string.lower(plr.DisplayName)
            if string.find(lowerName, lowerTargetName, 1, true) or 
               string.find(lowerDisplayName, lowerTargetName, 1, true) then
                target = plr
                break
            end
        end
        teleportToPosition(target.Character.HumanoidRootPart.Position)
    end
end)
